(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[3920,762],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/inputs/text-field/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\n\nimport { KvTextField } from '@kelvininc/react-ui-components/client';\n\nexport const TextFieldExample: React.FC = () => (\n\t<>\n\t\t{/*-- Default --*/}\n\t\t<KvTextField />\n\n\t\t{/*-- Labeled --*/}\n\t\t<KvTextField label=\"Text Field\" />\n\n\t\t{/*-- Disabled --*/}\n\t\t<KvTextField inputDisabled />\n\t</>\n);\n```\n\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                   | Type| Default                 |\n| ---------------- | ------------------ | --------------------------------------------------------------------------------------------- || ----------------------- |\n| `actionIcon`     | `action-icon`      | (optional) Icon that is added on the right of the input. Its clickable.                       | `EIconName`| `undefined`             |\n| `badge`          | `badge`            | (optional) Text to display inside a badge on the right side of the displayed value            | `string`| `undefined`             |\n| `customStyle`    | `custom-style`     | (optional) Additional style to apply for custom CSS.                                          | `{ [key: string]: string; }`| `undefined`             |\n| `examples`       | `examples`         | (optional) Text field example values                                                          | `string[]`| `undefined`             |\n| `fitContent`     | `fit-content`      | (optional) Enable/disable the resize of input (default: true)                                 | `boolean`| `true`                  |\n| `forcedFocus`    | `forced-focus`     | (optional) Text field focus state                                                             | `boolean`| `false`                 |\n| `helpText`       | `help-text`        | (optional) Text field help text                                                               | `string \\| string[]`| `[]`                    |\n| `hideBadge`      | `hide-badge`       | (optional) If true, the badge is not displayed                                                | `boolean`| `false`                 |\n| `icon`           | `icon`             | (optional) Text field's icon symbol name                                                      | `EIconName`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | `undefined`             |\n| `inputDisabled`  | `input-disabled`   | (optional) Text field disabled                                                                | `boolean`| `false`                 |\n| `inputMaskRegex` | `input-mask-regex` | (optional) Input mask regex                                                                   | `string`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     | `''`                    |\n| `inputName`      | `input-name`       | (optional) Text field input name                                                              | `string`| `undefined`             |\n| `inputReadonly`  | `input-readonly`   | (optional) Text field is readonly                                                             | `boolean`| `false`                 |\n| `inputRequired`  | `input-required`   | (optional) Text field required                                                                | `boolean`| `false`                 |\n| `isDirty`        | `is-dirty`         | (optional) If true, a dirty dot indicator will be added to right side of the displayed value. | `boolean`| `false`                 |\n| `label`          | `label`            | (optional) Text field label                                                                   | `string`| `undefined`             |\n| `loading`        | `loading`          | (optional) Text field loading state                                                           | `boolean`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | `false`                 |\n| `max`            | `max`              | (optional) Text field maximum value                                                           | `number \\| string`| `undefined`             |\n| `maxLength`      | `max-length`       | (optional) Text field maximum number of characters required                                   | `number`| `undefined`             |\n| `min`            | `min`              | (optional) Text field minimum value                                                           | `number \\| string`| `undefined`             |\n| `minLength`      | `min-length`       | (optional) Text field minimum number of characters required                                   | `number`| `undefined`             |\n| `placeholder`    | `placeholder`      | (optional) Text field place holder                                                            | `string`| `''`                    |\n| `size`           | `size`             | (optional) Sets this tab item to a different styling configuration                            | `EComponentSize.Large \\| EComponentSize.Small`| `EComponentSize.Large`  |\n| `state`          | `state`            | (optional) Text field state                                                                   | `EValidationState.Invalid \\| EValidationState.None \\| EValidationState.Valid`| `EValidationState.None` |\n| `step`           | `step`             | (optional) Text field interval between legal numbers                                          | `number \\| string`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | `undefined`             |\n| `tooltipConfig`  | `tooltip-config`   | (optional) Text field tooltip configuration                                                   | `{ text?: string; position?: ETooltipPosition; allowedPositions?: ETooltipPosition[]; options?: Partial<{ strategy?: Strategy; placement?: Placement; middleware?: (false \\| { name: string; options?: any; fn: (state: { x: number; y: number; initialPlacement: Placement; strategy: Strategy; platform: Platform; placement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<MiddlewareReturn>; })[]; platform?: Platform; }>; disabled?: boolean; contentElement?: HTMLElement; truncate?: boolean; delay?: number; withArrow?: boolean; customStyle?: { [key: string]: string; }; customClass?: CustomCssClass; }` | `undefined`             |\n| `type`           | `type`             | (optional) Text field type                                                                    | `EInputFieldType.Date \\| EInputFieldType.DateTime \\| EInputFieldType.Email \\| EInputFieldType.Number \\| EInputFieldType.Password \\| EInputFieldType.Radio \\| EInputFieldType.Text`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | `EInputFieldType.Text`  |\n| `useInputMask`   | `use-input-mask`   | (optional) Use a input mask when the text field type is number (default true)                 | `boolean`| `undefined`             |\n| `value`          | `value`            | (optional) Text field value                                                                   | `number \\| string`| `''`                    |\n| `valuePrefix`    | `value-prefix`     | (optional) Defines the prefix that adds context to displayed values                           | `string`| `undefined`             |\n\n\n## Events\n\n| Event              | Description                                  | Type                      |\n| ------------------ | -------------------------------------------- | ------------------------- |\n| `fieldClick`       | Emmited when there's a click on this element | `CustomEvent<MouseEvent>` |\n| `rightActionClick` | Emitted when the right icon is clicked       | `CustomEvent<MouseEvent>` |\n| `textChange`       | Emitted when a keyboard input occurred       | `CustomEvent<string>`     |\n| `textFieldBlur`    | Emitted when text field lost focus           | `CustomEvent<string>`     |\n\n\n## Methods\n\n### `focusInput() => Promise<void>`\n\nFocuses the input\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Shadow Parts\n\n| Part                | Description                                            |\n| ------------------- | ------------------------------------------------------ |\n| `\"badge\"`           | badge rendered at the right of the text field          |\n| `\"input-container\"` | container that includes the input, right and left slot |\n\n\n## CSS Custom Properties\n\n| Name                                | Description                                    |\n| ----------------------------------- | ---------------------------------------------- |\n| `--background-color-default`        | Background color when state is default.        |\n| `--background-color-default`        | Background color when state is default.        |\n| `--background-color-disabled`       | Background color when state is disabled.       |\n| `--background-color-disabled`       | Background color when state is disabled.       |\n| `--border-color-default`            | Border color when state is default.            |\n| `--border-color-default`            | Border color when state is default.            |\n| `--border-color-error`              | Border color when state is invalid.            |\n| `--border-color-error`              | Border color when state is invalid.            |\n| `--border-color-focused`            | Border color when state is focused.            |\n| `--border-color-focused`            | Border color when state is focused.            |\n| `--input-height-large`              | Text Field's large height.                     |\n| `--input-height-large`              | Text Field's large height.                     |\n| `--input-height-small`              | Text Field's small height.                     |\n| `--input-height-small`              | Text Field's small height.                     |\n| `--input-max-width`                 | Text Field's max width.                        |\n| `--input-max-width`                 | Text Field's max width.                        |\n| `--input-min-width`                 | Text Field's min width.                        |\n| `--input-min-width`                 | Text Field's min width.                        |\n| `--input-width`                     | Text Field's width.                            |\n| `--input-width`                     | Text Field's width.                            |\n| `--text-color-action-icon-default`  | Action icon color when state is default.       |\n| `--text-color-action-icon-default`  | Action icon color when state is default.       |\n| `--text-color-action-icon-disabled` | Action icon color when state is disabled.      |\n| `--text-color-action-icon-disabled` | Action icon color when state is disabled.      |\n| `--text-color-action-icon-focused`  | Action icon color when state is focused.       |\n| `--text-color-action-icon-focused`  | Action icon color when state is focused.       |\n| `--text-color-help-text-default`    | Help Text color when state is default.         |\n| `--text-color-help-text-default`    | Help Text color when state is default.         |\n| `--text-color-help-text-error`      | Help Text color when state is invalid.         |\n| `--text-color-help-text-error`      | Help Text color when state is invalid.         |\n| `--text-color-icon-default`         | Icon color when state is default.              |\n| `--text-color-icon-default`         | Icon color when state is default.              |\n| `--text-color-icon-disabled`        | Icon color when state is disabled.             |\n| `--text-color-icon-disabled`        | Icon color when state is disabled.             |\n| `--text-color-icon-focused`         | Icon color when state is focused.              |\n| `--text-color-icon-focused`         | Icon color when state is focused.              |\n| `--text-color-input-default`        | Input text color when state is default.        |\n| `--text-color-input-default`        | Input text color when state is default.        |\n| `--text-color-input-disabled`       | Input text color when state is disabled.       |\n| `--text-color-input-disabled`       | Input text color when state is disabled.       |\n| `--text-color-input-focused`        | Input Text color when state is focused.        |\n| `--text-color-input-focused`        | Input Text color when state is focused.        |\n| `--text-color-label`                | Label Text color.                              |\n| `--text-color-label`                | Label Text color.                              |\n| `--text-color-placeholder-default`  | Placeholder text color when state is default.  |\n| `--text-color-placeholder-default`  | Placeholder text color when state is default.  |\n| `--text-color-placeholder-disabled` | Placeholder text color when state is disabled. |\n| `--text-color-placeholder-disabled` | Placeholder text color when state is disabled. |\n| `--text-color-placeholder-focused`  | Placeholder text color when state is focused.  |\n| `--text-color-placeholder-focused`  | Placeholder text color when state is focused.  |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-dropdown](../dropdown)\n - [kv-search](../search)\n - [kv-select-create-option](../select-create-option)\n\n### Depends on\n\n- [kv-tooltip](../tooltip)\n- [kv-form-label](../form-label)\n- [kv-icon](../icon)\n- [kv-dirty-dot](../dirty-dot)\n- [kv-badge](../badge)\n- [kv-form-help-text](../form-help-text)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-text-field --\x3e kv-tooltip\n  kv-text-field --\x3e kv-form-label\n  kv-text-field --\x3e kv-icon\n  kv-text-field --\x3e kv-dirty-dot\n  kv-text-field --\x3e kv-badge\n  kv-text-field --\x3e kv-form-help-text\n  kv-tooltip --\x3e kv-portal\n  kv-tooltip --\x3e kv-tooltip-text\n  kv-dirty-dot --\x3e kv-icon\n  kv-form-help-text --\x3e kv-icon\n  kv-dropdown --\x3e kv-text-field\n  kv-search --\x3e kv-text-field\n  kv-select-create-option --\x3e kv-text-field\n  style kv-text-field fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),TextField_stories=__webpack_require__("./src/components/inputs/text-field/TextField.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:TextField_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/inputs/text-field/TextField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DateTimeInputMask:()=>DateTimeInputMask,Default:()=>Default,DefaultIcon:()=>DefaultIcon,Disabled:()=>Disabled,HelpText:()=>HelpText,Invalid:()=>Invalid,Loading:()=>Loading,MaxMinLength:()=>MaxMinLength,MaxMinValue:()=>MaxMinValue,Required:()=>Required,Slim:()=>Slim,SlimIcon:()=>SlimIcon,Step:()=>Step,WithLeftSlot:()=>WithLeftSlot,WithNumericInputMask:()=>WithNumericInputMask,WithTextInputMask:()=>WithTextInputMask,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Text Field",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.xag,argTypes:{inputDisabled:{control:{type:"boolean"}},inputRequired:{control:{type:"boolean"}},loading:{control:{type:"boolean"}},helpText:{control:{type:"text"}},value:{control:{type:"text"}},min:{control:{type:"number"}},max:{control:{type:"number"}},state:{control:{type:"radio"},options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih)},size:{control:"radio",options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz)},type:{control:"select",options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1)},onTextChange:{action:"text changed..."},onTextFieldBlur:{action:"text field on blur"}}},Default={args:{label:"Default Text Field",inputDisabled:!1,inputRequired:!1,loading:!1,placeholder:"text here",state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},WithTextInputMask={args:{label:"Text Field with text input mask",inputDisabled:!1,inputRequired:!1,loading:!1,value:"Possible Text Here",inputMaskRegex:"[a-zA-Z s]+",placeholder:"",state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large,useInputMask:!0,type:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1.Text}},WithNumericInputMask={args:{label:"Text Field with numeric input mask",inputDisabled:!1,inputRequired:!1,loading:!1,value:0,min:-100,max:100,placeholder:"",state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large,useInputMask:!0,type:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1.Number}},DefaultIcon={args:{...Default.args,icon:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.ib.Layer}},Disabled={args:{...Default.args,label:"Disabled Text Field",value:"text value",inputDisabled:!0,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},Required={args:{...Default.args,label:"Required Text Field",inputRequired:!0,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},MaxMinLength={args:{...Default.args,label:"Required Text Field",inputRequired:!0,minLength:5,maxLength:10}},MaxMinValue={args:{...Default.args,type:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1.Number,label:"Required Text Field",inputRequired:!0,min:0,max:10}},Step={args:{...Default.args,type:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1.Number,label:"Required Text Field",inputRequired:!0,step:.1}},Loading={args:{...Default.args,label:"Loading Text Field",loading:!0,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},HelpText={args:{...Default.args,label:"Help Text Field",helpText:"Help text",state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},Invalid={args:{...Default.args,label:"Invalid Text Field",helpText:["First help or instruction text goes here.","Second help or instruction text goes here."],state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.Invalid,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large,icon:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.ib.Layer}},Slim={args:{...Default.args,label:"Slim Text Field",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Small,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None}},SlimIcon={args:{...Default.args,label:"Slim Text Field",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Small,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,icon:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.ib.Layer}},WithLeftSlot={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.xag,{...args,style:{"--left-slot-width":"24px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{slot:"left-slot",children:"$"})}),args:{label:"Left Slot Text Field",inputDisabled:!1,inputRequired:!1,loading:!1,placeholder:"text here",state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},DateTimeInputMask={args:{label:"Date time input mask",inputDisabled:!1,inputRequired:!1,loading:!1,useInputMask:!0,type:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Y1.DateTime,state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Ih.None,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.Cz.Large}},__namedExportsOrder=["Default","WithTextInputMask","WithNumericInputMask","DefaultIcon","Disabled","Required","MaxMinLength","MaxMinValue","Step","Loading","HelpText","Invalid","Slim","SlimIcon","WithLeftSlot","DateTimeInputMask"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Default Text Field",\n    inputDisabled: false,\n    inputRequired: false,\n    loading: false,\n    placeholder: "text here",\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...Default.parameters?.docs?.source}}},WithTextInputMask.parameters={...WithTextInputMask.parameters,docs:{...WithTextInputMask.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Text Field with text input mask",\n    inputDisabled: false,\n    inputRequired: false,\n    loading: false,\n    value: "Possible Text Here",\n    inputMaskRegex: "[a-zA-Z s]+",\n    placeholder: "",\n    state: EValidationState.None,\n    size: EComponentSize.Large,\n    useInputMask: true,\n    type: EInputFieldType.Text\n  }\n}',...WithTextInputMask.parameters?.docs?.source}}},WithNumericInputMask.parameters={...WithNumericInputMask.parameters,docs:{...WithNumericInputMask.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Text Field with numeric input mask",\n    inputDisabled: false,\n    inputRequired: false,\n    loading: false,\n    value: 0,\n    min: -100,\n    max: 100,\n    placeholder: "",\n    state: EValidationState.None,\n    size: EComponentSize.Large,\n    useInputMask: true,\n    type: EInputFieldType.Number\n  }\n}',...WithNumericInputMask.parameters?.docs?.source}}},DefaultIcon.parameters={...DefaultIcon.parameters,docs:{...DefaultIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    icon: EIconName.Layer\n  }\n}",...DefaultIcon.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Disabled Text Field",\n    value: "text value",\n    inputDisabled: true,\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...Disabled.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Required Text Field",\n    inputRequired: true,\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...Required.parameters?.docs?.source}}},MaxMinLength.parameters={...MaxMinLength.parameters,docs:{...MaxMinLength.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Required Text Field",\n    inputRequired: true,\n    minLength: 5,\n    maxLength: 10\n  }\n}',...MaxMinLength.parameters?.docs?.source}}},MaxMinValue.parameters={...MaxMinValue.parameters,docs:{...MaxMinValue.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    type: EInputFieldType.Number,\n    label: "Required Text Field",\n    inputRequired: true,\n    min: 0,\n    max: 10\n  }\n}',...MaxMinValue.parameters?.docs?.source}}},Step.parameters={...Step.parameters,docs:{...Step.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    type: EInputFieldType.Number,\n    label: "Required Text Field",\n    inputRequired: true,\n    step: 0.1\n  }\n}',...Step.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Loading Text Field",\n    loading: true,\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...Loading.parameters?.docs?.source}}},HelpText.parameters={...HelpText.parameters,docs:{...HelpText.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Help Text Field",\n    helpText: "Help text",\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...HelpText.parameters?.docs?.source}}},Invalid.parameters={...Invalid.parameters,docs:{...Invalid.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Invalid Text Field",\n    helpText: ["First help or instruction text goes here.", "Second help or instruction text goes here."],\n    state: EValidationState.Invalid,\n    size: EComponentSize.Large,\n    icon: EIconName.Layer\n  }\n}',...Invalid.parameters?.docs?.source}}},Slim.parameters={...Slim.parameters,docs:{...Slim.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Slim Text Field",\n    size: EComponentSize.Small,\n    state: EValidationState.None\n  }\n}',...Slim.parameters?.docs?.source}}},SlimIcon.parameters={...SlimIcon.parameters,docs:{...SlimIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    label: "Slim Text Field",\n    size: EComponentSize.Small,\n    state: EValidationState.None,\n    icon: EIconName.Layer\n  }\n}',...SlimIcon.parameters?.docs?.source}}},WithLeftSlot.parameters={...WithLeftSlot.parameters,docs:{...WithLeftSlot.parameters?.docs,source:{originalSource:'{\n  render: TextFieldLeftSlotTemplate,\n  args: {\n    label: "Left Slot Text Field",\n    inputDisabled: false,\n    inputRequired: false,\n    loading: false,\n    placeholder: "text here",\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...WithLeftSlot.parameters?.docs?.source}}},DateTimeInputMask.parameters={...DateTimeInputMask.parameters,docs:{...DateTimeInputMask.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Date time input mask",\n    inputDisabled: false,\n    inputRequired: false,\n    loading: false,\n    useInputMask: true,\n    type: EInputFieldType.DateTime,\n    state: EValidationState.None,\n    size: EComponentSize.Large\n  }\n}',...DateTimeInputMask.parameters?.docs?.source}}}}}]);