(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[6691,487],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/inputs/date-time-input/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\n\nimport { KvDateTimeInput } from '@kelvininc/react-ui-components/client';\n\nexport const DateTimeInputExample: React.FC = () => (\n\t<>\n\t\t{/*-- Default --*/}\n\t\t<KvDateTimeInput />\n\n\t\t{/*-- Labeled --*/}\n\t\t<KvDateTimeInput label=\"Text Field\" />\n\t</>\n);\n```\n\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                      | Type                                                                                                             | Default                             |\n| ---------------- | ------------------ | -------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------- | ----------------------------------- |\n| `dateFormat`     | `date-format`      | (optional) Format of the provided date                                           | `string`                                                                                                         | `DEFAULT_DATE_FORMAT`               |\n| `disabled`       | `disabled`         | (optional) Date time input disabled                                              | `boolean`                                                                                                        | `false`                             |\n| `forcedFocus`    | `forced-focus`     | (optional) Date time focus state                                                 | `boolean`                                                                                                        | `false`                             |\n| `helpText`       | `help-text`        | (optional) Date time input help text                                             | `string \\| string[]`                                                                                             | `[]`                                |\n| `highlighted`    | `highlighted`      | (optional) Similar to forcedFocus but does not emmit events                      | `boolean`                                                                                                        | `false`                             |\n| `inputName`      | `input-name`       | (optional) Date time input name                                                  | `string`                                                                                                         | `undefined`                         |\n| `inputStyleType` | `input-style-type` | (optional) Specifies if the inputs should be joined together or separated        | `EDateTimeInputTypeStyle.MergedLeft \\| EDateTimeInputTypeStyle.MergedRight \\| EDateTimeInputTypeStyle.Separated` | `EDateTimeInputTypeStyle.Separated` |\n| `label`          | `label`            | (optional) Date time input label                                                 | `string`                                                                                                         | `undefined`                         |\n| `leftIcon`       | `left-icon`        | (optional) Input left icon                                                       | `EIconName`                                                                                                      | `undefined`                         |\n| `placeholder`    | `placeholder`      | (optional) Date time place holder                                                | `string`                                                                                                         | `DEFAULT_PLACEHOLDER`               |\n| `required`       | `required`         | (optional) Date time input required                                              | `boolean`                                                                                                        | `false`                             |\n| `rightIcon`      | `right-icon`       | (optional) Input right icon                                                      | `EIconName`                                                                                                      | `undefined`                         |\n| `size`           | `size`             | (optional) Sets this tab item to a different styling configuration               | `EComponentSize.Large \\| EComponentSize.Small`                                                                   | `EComponentSize.Large`              |\n| `state`          | `state`            | (optional) Date time input state                                                 | `EValidationState.Invalid \\| EValidationState.None \\| EValidationState.Valid`                                    | `EValidationState.None`             |\n| `useInputMask`   | `use-input-mask`   | (optional) Use a input mask when the Date time type is a Datetime (default true) | `boolean`                                                                                                        | `false`                             |\n| `value`          | `value`            | (optional) Date time value                                                       | `string`                                                                                                         | `''`                                |\n\n\n## Events\n\n| Event            | Description                            | Type                      |\n| ---------------- | -------------------------------------- | ------------------------- |\n| `dateTimeBlur`   | Emitted when date time lost focus      | `CustomEvent<string>`     |\n| `inputFocus`     | Emitted when the input is foccused     | `CustomEvent<FocusEvent>` |\n| `rightIconClick` | Emitted when the right icon is clicked | `CustomEvent<string>`     |\n| `textChange`     | Emitted when a keyboard input occurred | `CustomEvent<string>`     |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-absolute-time-picker](../absolute-time-picker)\n - [kv-absolute-time-picker-dropdown-input](../absolute-time-picker-dropdown-input)\n\n### Depends on\n\n- [kv-form-label](../form-label)\n- [kv-icon](../icon)\n- [kv-form-help-text](../form-help-text)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-date-time-input --\x3e kv-form-label\n  kv-date-time-input --\x3e kv-icon\n  kv-date-time-input --\x3e kv-form-help-text\n  kv-form-help-text --\x3e kv-icon\n  kv-absolute-time-picker --\x3e kv-date-time-input\n  kv-absolute-time-picker-dropdown-input --\x3e kv-date-time-input\n  style kv-date-time-input fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),DateTimeInput_stories=__webpack_require__("./src/components/inputs/date-time-input/DateTimeInput.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:DateTimeInput_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/inputs/date-time-input/DateTimeInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DateTimeInputMask:()=>DateTimeInputMask,DateTimeWithoutMask:()=>DateTimeWithoutMask,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Date Time Input",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_0__.f8_,argTypes:{size:{control:"radio",options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.Cz)},onTextChange:{action:"text changed..."},onDateTimeBlur:{action:"date time on blur"}}},Default={args:{label:"Default Text input",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.Cz.Large}},DateTimeInputMask={args:{label:"Date time input mask",useInputMask:!0,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.Cz.Large}},DateTimeWithoutMask={args:{label:"Date time input mask",useInputMask:!1,placeholder:"Drop date & time here",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.Cz.Large,forcedFocus:!0}},__namedExportsOrder=["Default","DateTimeInputMask","DateTimeWithoutMask"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Default Text input",\n    size: EComponentSize.Large\n  }\n}',...Default.parameters?.docs?.source}}},DateTimeInputMask.parameters={...DateTimeInputMask.parameters,docs:{...DateTimeInputMask.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Date time input mask",\n    useInputMask: true,\n    size: EComponentSize.Large\n  }\n}',...DateTimeInputMask.parameters?.docs?.source}}},DateTimeWithoutMask.parameters={...DateTimeWithoutMask.parameters,docs:{...DateTimeWithoutMask.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Date time input mask",\n    useInputMask: false,\n    placeholder: "Drop date & time here",\n    size: EComponentSize.Large,\n    forcedFocus: true\n  }\n}',...DateTimeWithoutMask.parameters?.docs?.source}}}}}]);