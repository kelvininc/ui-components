(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[796,5625],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/time-picker/components/calendar/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\n\nimport { KvCalendar } from '@kelvininc/react-ui-components/client';\n\nexport const KvCalendarExample: React.FC = () => (\n\t<>\n\t\t{/*-- Default --*/}\n\t\t<KvCalendar />\n\n\t\t{/*-- With initial date --*/}\n\t\t<KvCalendar initialDate=\"2022-08-04\" />\n\t</>\n);\n```\n\n\n\n## Properties\n\n| Property                    | Attribute                      | Description                                                                                                           | Type                                                              | Default                         |\n| --------------------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- | ------------------------------- |\n| `disableHoveringStyling`    | `disable-hovering-styling`     | (optional) Disables the hovering styling when the dates are being selected, and when start or end date is not defined | `boolean`                                                         | `false`                         |\n| `disabledDates`             | `disabled-dates`               | (options) The disabled dates array                                                                                    | `string[]`                                                        | `[]`                            |\n| `displayNextMonthArrow`     | `display-next-month-arrow`     | (optional) Enables the next month click icon                                                                          | `boolean`                                                         | `true`                          |\n| `displayPreviousMonthArrow` | `display-previous-month-arrow` | (optional) Enables the previous month click icon                                                                      | `boolean`                                                         | `true`                          |\n| `hoveredDate`               | `hovered-date`                 | (optional) Defines if a date is hovered                                                                               | `string`                                                          | `undefined`                     |\n| `initialDate`               | `initial-date`                 | (optional) Initial date                                                                                               | `string`                                                          | `undefined`                     |\n| `maxDate`                   | `max-date`                     | (optional) Maximum accepted date. Format: YYYY-MM-DD                                                                  | `string`                                                          | `undefined`                     |\n| `minDate`                   | `min-date`                     | (optional) Minimum accepted date. Format: YYYY-MM-DD                                                                  | `string`                                                          | `undefined`                     |\n| `mode`                      | `mode`                         | (optional) Defines if the calendar is in single date or range mode                                                    | `EAbsoluteTimePickerMode.Range \\| EAbsoluteTimePickerMode.Single` | `EAbsoluteTimePickerMode.Range` |\n| `selectedDates`             | `selected-dates`               | (optional) The currently selected dates                                                                               | `string[]`                                                        | `[]`                            |\n\n\n## Events\n\n| Event               | Description                           | Type                             |\n| ------------------- | ------------------------------------- | -------------------------------- |\n| `changeMonth`       | Emitted when a month changes          | `CustomEvent<IChangeMonthEvent>` |\n| `changeYear`        | Emitted when a year changes           | `CustomEvent<IChangeYearEvent>`  |\n| `clickDate`         | Emitted when a date is clicked        | `CustomEvent<IClickDateEvent>`   |\n| `hoveredDateChange` | Emitted when the hovered date changes | `CustomEvent<string>`            |\n\n\n## CSS Custom Properties\n\n| Name                                  | Description                                |\n| ------------------------------------- | ------------------------------------------ |\n| `--calendar-background-color`         | The calendar background color.             |\n| `--calendar-horizontal-padding`       | The calendar container horizontal padding. |\n| `--calendar-month-title-text-color`   | The calendar month text color.             |\n| `--calendar-month-weekday-text-color` | The calendar week day text color.          |\n| `--calendar-vertical-padding`         | The calendar container vertical padding.   |\n| `--calendar-width`                    | The calendar container width.              |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-absolute-time-picker](../absolute-time-picker)\n - [kv-absolute-time-picker-dropdown-input](../absolute-time-picker-dropdown-input)\n\n### Depends on\n\n- [kv-icon](../icon)\n- [kv-calendar-day](../calendar-day)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-calendar --\x3e kv-icon\n  kv-calendar --\x3e kv-calendar-day\n  kv-absolute-time-picker --\x3e kv-calendar\n  kv-absolute-time-picker-dropdown-input --\x3e kv-calendar\n  style kv-calendar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),Calendar_stories=__webpack_require__("./src/components/time-picker/components/calendar/Calendar.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Calendar_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/time-picker/components/calendar/Calendar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultState:()=>DefaultState,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Time Picker/Components/Calendar",component:__webpack_require__("../../packages/react-ui-components/dist/client.esm.js").oqY,argTypes:{selectedDates:{type:"object"},onChangeMonth:{action:"changeMonth"},onChangeYear:{action:"changeYear"},onClickDate:{action:"clickDate"}}},DefaultState={args:{initialDate:new Date("2023-01-01").toISOString()}},__namedExportsOrder=["DefaultState"];DefaultState.parameters={...DefaultState.parameters,docs:{...DefaultState.parameters?.docs,source:{originalSource:'{\n  args: {\n    initialDate: new Date("2023-01-01").toISOString()\n  }\n}',...DefaultState.parameters?.docs?.source}}}}}]);