(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[5634,7441],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/inputs/search/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\n\nimport { KvSearch } from '@kelvininc/react-ui-components/client';\n\nexport const SearchExample: React.FC = () => (\n\t<>\n\t\t{/*-- Default --*/}\n\t\t<KvSearch />\n\n\t\t{/*-- With Placeholder --*/}\n\t\t<KvSearch placeholder=\"New Search Placeholder\" />\n\n\t\t{/*-- Disabled --*/}\n\t\t<KvSearch inputDisabled />\n\t</>\n);\n```\n\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                   | Type| Default                 |\n| ---------------- | ------------------ | ----------------------------------------------------------------------------- || ----------------------- |\n| `examples`       | `examples`         | (optional) Text field example values                                          | `string[]`| `undefined`             |\n| `forcedFocus`    | `forced-focus`     | (optional) Text field focus state                                             | `boolean`| `false`                 |\n| `helpText`       | `help-text`        | (optional) Text field help text                                               | `string \\| string[]`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | `[]`                    |\n| `inputDisabled`  | `input-disabled`   | (optional) Text field disabled                                                | `boolean`| `false`                 |\n| `inputMaskRegex` | `input-mask-regex` | (optional) Input mask regex                                                   | `string`| `''`                    |\n| `inputName`      | `input-name`       | (optional) Text field input name                                              | `string`| `undefined`             |\n| `inputReadonly`  | `input-readonly`   | (optional) Text field is readonly                                             | `boolean`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | `false`                 |\n| `inputRequired`  | `input-required`   | (optional) Text field required                                                | `boolean`| `false`                 |\n| `label`          | `label`            | (optional) Text field label                                                   | `string`| `undefined`             |\n| `loading`        | `loading`          | (optional) Text field loading state                                           | `boolean`| `false`                 |\n| `max`            | `max`              | (optional) Text field maximum value                                           | `number \\| string`| `undefined`             |\n| `maxLength`      | `max-length`       | (optional) Text field maximum number of characters required                   | `number`| `undefined`             |\n| `min`            | `min`              | (optional) Text field minimum value                                           | `number \\| string`| `undefined`             |\n| `minLength`      | `min-length`       | (optional) Text field minimum number of characters required                   | `number`| `undefined`             |\n| `placeholder`    | `placeholder`      | (optional) Text field place holder                                            | `string`| `'Search'`              |\n| `size`           | `size`             | (optional) Sets this tab item to a different styling configuration            | `EComponentSize.Large \\| EComponentSize.Small`| `EComponentSize.Large`  |\n| `state`          | `state`            | (optional) Text field state                                                   | `EValidationState.Invalid \\| EValidationState.None \\| EValidationState.Valid`| `EValidationState.None` |\n| `step`           | `step`             | (optional) Text field interval between legal numbers                          | `number \\| string`| `undefined`             |\n| `tooltipConfig`  | `tooltip-config`   | (optional) Text field tooltip configuration                                   | `{ text?: string; position?: ETooltipPosition; allowedPositions?: ETooltipPosition[]; options?: Partial<{ strategy?: Strategy; placement?: Placement; middleware?: (false \\| { name: string; options?: any; fn: (state: { x: number; y: number; initialPlacement: Placement; strategy: Strategy; platform: Platform; placement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<MiddlewareReturn>; })[]; platform?: Platform; }>; disabled?: boolean; contentElement?: HTMLElement; truncate?: boolean; delay?: number; withArrow?: boolean; customStyle?: { [key: string]: string; }; customClass?: CustomCssClass; }` | `undefined`             |\n| `type`           | `type`             | (optional) Text field type                                                    | `EInputFieldType.Date \\| EInputFieldType.DateTime \\| EInputFieldType.Email \\| EInputFieldType.Number \\| EInputFieldType.Password \\| EInputFieldType.Radio \\| EInputFieldType.Text`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | `EInputFieldType.Text`  |\n| `useInputMask`   | `use-input-mask`   | (optional) Use a input mask when the text field type is number (default true) | `boolean`| `false`                 |\n| `value`          | `value`            | (optional) Text field value                                                   | `number \\| string`| `''`                    |\n\n\n## Events\n\n| Event              | Description                                  | Type                      |\n| ------------------ | -------------------------------------------- | ------------------------- |\n| `clickResetButton` | Emitted when the reset button is clicked     | `CustomEvent<MouseEvent>` |\n| `fieldClick`       | Emmited when there's a click on this element | `CustomEvent<MouseEvent>` |\n| `rightActionClick` | Emitted when the right icon is clicked       | `CustomEvent<MouseEvent>` |\n| `textChange`       | Emitted when a keyboard input occurred       | `CustomEvent<string>`     |\n| `textFieldBlur`    | Emitted when text field lost focus           | `CustomEvent<string>`     |\n\n\n## Methods\n\n### `focusInput() => Promise<void>`\n\nFocus input\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Used by\n\n - [kv-select](../select)\n\n### Depends on\n\n- [kv-text-field](../text-field)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-search --\x3e kv-text-field\n  kv-text-field --\x3e kv-tooltip\n  kv-text-field --\x3e kv-form-label\n  kv-text-field --\x3e kv-icon\n  kv-text-field --\x3e kv-dirty-dot\n  kv-text-field --\x3e kv-badge\n  kv-text-field --\x3e kv-form-help-text\n  kv-tooltip --\x3e kv-portal\n  kv-tooltip --\x3e kv-tooltip-text\n  kv-dirty-dot --\x3e kv-icon\n  kv-form-help-text --\x3e kv-icon\n  kv-select --\x3e kv-search\n  style kv-search fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),Search_stories=__webpack_require__("./src/components/inputs/search/Search.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Search_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/inputs/search/Search.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Slim:()=>Slim,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Search",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.EpH,render:args=>{const[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""),onSearchTermChange=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((({detail})=>{setSearchValue(detail)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.EpH,{...args,value:searchValue,onTextChange:onSearchTermChange})},argTypes:{inputDisabled:{control:{type:"boolean"}},size:{control:"radio",options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.Cz)},onTextChange:{action:"textChange"},onTextFieldBlur:{action:"textFieldBlur"},onClickResetButton:{action:"clickResetButton"}}},Default={args:{value:"",inputDisabled:!1,placeholder:"Placeholder Here",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.Cz.Large}},Disabled={args:{...Default.args,value:"",placeholder:"Search disabled",inputDisabled:!0,size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.Cz.Large}},Slim={args:{...Default.args,value:"",placeholder:"Small Search",size:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.Cz.Small}},__namedExportsOrder=["Default","Disabled","Slim"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: "",\n    inputDisabled: false,\n    placeholder: "Placeholder Here",\n    size: EComponentSize.Large\n  }\n}',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    value: "",\n    placeholder: "Search disabled",\n    inputDisabled: true,\n    size: EComponentSize.Large\n  }\n}',...Disabled.parameters?.docs?.source}}},Slim.parameters={...Slim.parameters,docs:{...Slim.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    value: "",\n    placeholder: "Small Search",\n    size: EComponentSize.Small\n  }\n}',...Slim.parameters?.docs?.source}}}}}]);