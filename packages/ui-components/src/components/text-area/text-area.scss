@import '../../assets/styles/globals';

:host {
	/**
	* @prop --height-default: The height of the text area when is not focused.
	* @prop --height-active: The height of the text are when is focused.
	*/
	--height-default: 36px;
	--height-active: 100px;
}

.text-area-container {
	display: flex;
	gap: $spacing-2x;
	align-items: flex-start;

	.left-icon {
		margin-top: $spacing-2x;
	}

	.text-area {
		@include kelvin-light-scrollbar();

		display: flex;
		flex-direction: column;
		flex: 1;
		gap: $spacing-2x;

			.text-area-wrapper {
				padding: $spacing-2x $spacing-3x;
				border: 1px solid kv-color('neutral-3');
				border-radius: 4px;
				height: var(--height-default);
				overflow: auto;
				transition: height 0.25s ease-in-out;

				.input {
					@include kv-font-span-regular;
					outline: none;
					height: inherit;
					color: kv-color('neutral-8');
					overflow-wrap: anywhere;

				&.placeholder::before {
					content: attr(data-placeholder);
				}
			}

			&:hover,
			&:has(.input:focus),
			&.has-text {
				border: 1px solid kv-color('primary');

				.input {
					color: kv-color('neutral-8');
				}
			}

			&:has(.input:focus),
			&.has-text {
				height: var(--height-active);
			}

			&:hover:not(:has(.input:focus)) {
				cursor: pointer;
			}
		}


		&:has(.input:focus) .character-counter {
			display: block;
		}

		.character-counter {
			@include kv-font-label-small-regular;
			color: kv-color('neutral-5');
			margin-left: $spacing-3x;
			display: none;
		}
	}

	&.disabled {
		.text-area {
			.text-area-wrapper {
				border-color: kv-color('neutral-2');

				.input {
					color: kv-color('neutral-4');
				}

				&:hover:not(:has(.input:focus)) {
					cursor: not-allowed;
				}
			}
		}
	}
}
