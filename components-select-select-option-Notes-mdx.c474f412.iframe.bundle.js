(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[2747,3965],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/select/select-option/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject='\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from \'react\';\nimport { KvSelectOption } from \'@kelvininc/react-ui-components/client\';\nexport const KvSelectOptionExample: React.FC = () => (\n  <>\n\t{/*-- With all properties (only label and value are mandatory) --*/}\n\t<KvSelectOption\n\t\tlabel="Option 1"\n\t\tlink="option1"\n\t\tselected={false}\n\t\ttogglable={true}\n\t\t>\n\t</KvSelectOption>\n  </>\n);\n```\n\n\n\n## Properties\n\n| Property               | Attribute                 | Description                                                                                | Type                                                                       | Default     |\n| ---------------------- | ------------------------- | ------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- | ----------- |\n| `action`               | `action`                  | (optional) Action to display on the right side of the item                                 | `ISelectOptionAction`                                                      | `undefined` |\n| `customAttributes`     | `custom-attributes`       | (optional) Custom attributes to be applied to the option container element                 | `{ [x: string]: string; }`                                                 | `{}`        |\n| `customClass`          | `custom-class`            | (optional) Custom class to apply for custom styling.                                       | `CssClassMap \\| string \\| string[]`                                        | `\'\'`        |\n| `customStyle`          | `custom-style`            | (optional) Additional style to apply for custom CSS.                                       | `{ [key: string]: string; }`                                               | `undefined` |\n| `description`          | `description`             | (optional) Description of the item displayed on the right                                  | `string`                                                                   | `undefined` |\n| `disabled`             | `disabled`                | (optional) If `true` the item is disabled                                                  | `boolean`                                                                  | `false`     |\n| `heading`              | `heading`                 | (optional) If `true` the item is presented as a list heading. Default: `false`             | `boolean`                                                                  | `false`     |\n| `highlighted`          | `highlighted`             | (optional) If `true` the item is highlighted                                               | `boolean`                                                                  | `false`     |\n| `icon`                 | `icon`                    | (optional) Icon of the item displayed on the left                                          | `EIconName`                                                                | `undefined` |\n| `iconTooltipText`      | `icon-tooltip-text`       | (optional) Tooltip text to be displayed on icon hover                                      | `string`                                                                   | `undefined` |\n| `isDirty`              | `is-dirty`                | (optional) If true, a dirty dot indicator will be added to left side of the option\'s text. | `boolean`                                                                  | `false`     |\n| `label` _(required)_   | `label`                   | (required) The text to display on the item                                                 | `string`                                                                   | `undefined` |\n| `level`                | `level`                   | (optional) The level depth at which the option is rendered                                 | `number`                                                                   | `0`         |\n| `rightIcon`            | `right-icon`              | (optional) Icon of the item displayed on the right                                         | `EIconName`                                                                | `undefined` |\n| `rightIconTooltipText` | `right-icon-tooltip-text` | (optional) Tooltip text to be displayed on right icon hover                                | `string`                                                                   | `undefined` |\n| `selectable`           | `selectable`              | (optional) If `false` the item is only for presenting and cannot be selected.              | `boolean`                                                                  | `true`      |\n| `selected`             | `selected`                | (optional) If `true` the item is selected                                                  | `boolean`                                                                  | `false`     |\n| `state`                | `state`                   | (optional) The toggle button state                                                         | `EToggleState.Indeterminate \\| EToggleState.None \\| EToggleState.Selected` | `undefined` |\n| `togglable`            | `togglable`               | (optional) If `true` the item is togglable                                                 | `boolean`                                                                  | `false`     |\n| `value` _(required)_   | `value`                   | (required) The item value                                                                  | `string`                                                                   | `undefined` |\n\n\n## Events\n\n| Event          | Description                              | Type                  |\n| -------------- | ---------------------------------------- | --------------------- |\n| `itemSelected` | Emitted when the user clicks on the item | `CustomEvent<string>` |\n\n\n## Shadow Parts\n\n| Part                      | Description                    |\n| ------------------------- | ------------------------------ |\n| `"checkbox"`              | The option\'s checkbox          |\n| `"icon"`                  | The option\'s icon              |\n| `"label"`                 | The option\'s label             |\n| `"option-container"`      | The option\'s container         |\n| `"right-icon"`            |                                |\n| `"select-option-content"` | The option\'s content container |\n\n\n## CSS Custom Properties\n\n| Name                                            | Description                                       |\n| ----------------------------------------------- | ------------------------------------------------- |\n| `--select-option-background-color`              | Select option background color.                   |\n| `--select-option-background-color-highlighted`  | Select option background color when highlighted.  |\n| `--select-option-background-color-hover`        | Select option background color when hovered.      |\n| `--select-option-background-color-selected`     | Select option background color when selected.     |\n| `--select-option-description-color`             | Select option description color.                  |\n| `--select-option-description-color-highlighted` | Select option description color when highlighted. |\n| `--select-option-description-color-hover`       | Select option description color when hover.       |\n| `--select-option-description-color-selected`    | Select option description color when selected.    |\n| `--select-option-height`                        | Select option height.                             |\n| `--select-option-icon-color`                    | Select option icon color.                         |\n| `--select-option-icon-size`                     | Select option icon size in pixels.                |\n| `--select-option-label-color`                   | Select option label color.                        |\n| `--select-option-label-color-highlighted`       | Select option label color when highlighted.       |\n| `--select-option-label-color-hover`             | Select option label color when hover.             |\n| `--select-option-label-color-selected`          | Select option label color when selected.          |\n| `--select-option-right-icon-color`              | Select option right icon color.                   |\n| `--select-option-right-icon-size`               | Select option right icon size in pixels.          |\n| `--select-option-transition-duration`           | Select option transition time.                    |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-relative-time-picker](../relative-time-picker)\n - [kv-select-multi-options](../select-multi-options)\n\n### Depends on\n\n- [kv-checkbox](../checkbox)\n- [kv-tooltip](../tooltip)\n- [kv-icon](../icon)\n- [kv-dirty-dot](../dirty-dot)\n- [kv-action-button-icon](../action-button-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-select-option --\x3e kv-checkbox\n  kv-select-option --\x3e kv-tooltip\n  kv-select-option --\x3e kv-icon\n  kv-select-option --\x3e kv-dirty-dot\n  kv-select-option --\x3e kv-action-button-icon\n  kv-checkbox --\x3e kv-icon\n  kv-tooltip --\x3e kv-portal\n  kv-tooltip --\x3e kv-tooltip-text\n  kv-dirty-dot --\x3e kv-icon\n  kv-action-button-icon --\x3e kv-action-button\n  kv-action-button-icon --\x3e kv-icon\n  kv-action-button-icon --\x3e kv-badge\n  kv-relative-time-picker --\x3e kv-select-option\n  kv-select-multi-options --\x3e kv-select-option\n  style kv-select-option fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),SelectOption_stories=__webpack_require__("./src/components/select/select-option/SelectOption.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:SelectOption_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/select/select-option/SelectOption.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Select/Select Item",component:__webpack_require__("../../packages/react-ui-components/dist/client.esm.js").Lho,argTypes:{label:{control:{type:"text"}},description:{control:{type:"text"}},value:{control:{type:"text"}},selected:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},togglable:{control:{type:"boolean"}},selectable:{control:{type:"boolean"}}}},Default={args:{label:"Label 1",value:"label-1",description:"",selected:!0,togglable:!0,disabled:!1}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Label 1",\n    value: "label-1",\n    description: "",\n    selected: true,\n    togglable: true,\n    disabled: false\n  }\n}',...Default.parameters?.docs?.source}}}}}]);