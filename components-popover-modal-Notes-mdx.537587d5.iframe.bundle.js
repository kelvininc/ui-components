(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[1041,887],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/popover/modal/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\nimport { ModalOverlay, useModal } from '@kelvininc/react-ui-components/client';\nimport type { ModalOverlayProps } from '@kelvininc/react-ui-components/client';\n\nexport const ModalOverlayExample: React.FC = (args: ModalOverlayProps) => {\n\tconst modalController = useModal(args.isOpen);\n\n\treturn (\n\t\t<>\n\t\t\t<button type=\"button\" onClick={modalController.open}>\n\t\t\t\tOpen Modal\n\t\t\t</button>\n\t\t\t<ModalOverlay rootId=\"root\" {...args} isOpen={modalCtrl.isOpen} />\n\t\t</>\n\t);\n};\n```\n\n\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                                                                                                             | Type                                | Default     |\n| ----------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------- | ----------- |\n| `customClass`     | `custom-class`      | (optional) Additional classes to apply for custom CSS. If multiple classes are provided they should be separated by spaces. It is also valid to provide CssClassMap with boolean logic. | `CssClassMap \\| string \\| string[]` | `''`        |\n| `headerTitle`     | `header-title`      | (optional) Defines the modal title label                                                                                                                                                | `string`                            | `undefined` |\n| `showCloseButton` | `show-close-button` | (optional) Defines if the modal shows the close button                                                                                                                                  | `boolean`                           | `true`      |\n| `showOverlay`     | `show-overlay`      | (optional) Defines if the modal has an overlay background                                                                                                                               | `boolean`                           | `true`      |\n\n\n## Events\n\n| Event              | Description                                   | Type                         |\n| ------------------ | --------------------------------------------- | ---------------------------- |\n| `clickClose`       | Emitted when the close button is clicked      | `CustomEvent<MouseEvent>`    |\n| `clickOverlay`     | Emitted when the overlay container is clicked | `CustomEvent<MouseEvent>`    |\n| `escapeKeyPressed` | Emitted when the escape key is pressed        | `CustomEvent<KeyboardEvent>` |\n\n\n## Shadow Parts\n\n| Part        | Description                  |\n| ----------- | ---------------------------- |\n| `\"content\"` | The modal's content section. |\n| `\"topbar\"`  | The modal's topbar section.  |\n\n\n## CSS Custom Properties\n\n| Name                          | Description                       |\n| ----------------------------- | --------------------------------- |\n| `--modal-background-color`    | The modal's background color.     |\n| `--modal-background-color`    | The modal's background color.     |\n| `--modal-close-button-height` | The modal's close button height   |\n| `--modal-close-button-height` | The modal's close button height   |\n| `--modal-close-button-width`  | The modal's close button width    |\n| `--modal-close-button-width`  | The modal's close button width    |\n| `--modal-height`              | The modal's height in px.         |\n| `--modal-height`              | The modal's height in px.         |\n| `--modal-min-height`          | The modal's minimum height in px. |\n| `--modal-min-height`          | The modal's minimum height in px. |\n| `--modal-min-width`           | The modal's minimum width in px.  |\n| `--modal-min-width`           | The modal's minimum width in px.  |\n| `--modal-overlay-color`       | The modal's overlay color.        |\n| `--modal-overlay-color`       | The modal's overlay color.        |\n| `--modal-topbar-height`       | The modal's topbar height in px.  |\n| `--modal-topbar-height`       | The modal's topbar height in px.  |\n| `--modal-topbar-text-color`   | The modal's text topbar color.    |\n| `--modal-topbar-text-color`   | The modal's text topbar color.    |\n| `--modal-width`               | The modal's width in px.          |\n| `--modal-width`               | The modal's width in px.          |\n| `--modal-z-index`             | The modal's z-index               |\n| `--modal-z-index`             | The modal's z-index               |\n\n\n## Dependencies\n\n### Depends on\n\n- [kv-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-modal --\x3e kv-icon\n  style kv-modal fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),Modal_stories=__webpack_require__("./src/components/popover/modal/Modal.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Modal_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/popover/modal/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultState:()=>DefaultState,NoCloseButton:()=>NoCloseButton,NoOverlay:()=>NoOverlay,WithContentProjection:()=>WithContentProjection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Popover/Modal",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.lMf,render:args=>{const modalCtrl=(0,_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.hSE)(args.isOpen);return args.onClickClose=()=>modalCtrl.close(),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{type:"button",onClick:modalCtrl.open,children:"Open Modal"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.mHW,{rootId:"storybook-root",...args,isOpen:modalCtrl.isOpen,onEscapeKeyPressed:modalCtrl.close,children:args.children})]})}},DefaultState={args:{headerTitle:"Modal Header",isOpen:!1}},NoCloseButton={args:{...DefaultState.args,showCloseButton:!1}},NoOverlay={args:{...DefaultState.args,showOverlay:!1}},WithContentProjection={args:{...DefaultState.args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{slot:"header",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Content Header"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{slot:"body",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Content Body"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{slot:"footer",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Content footer"})})]})}},__namedExportsOrder=["DefaultState","NoCloseButton","NoOverlay","WithContentProjection"];DefaultState.parameters={...DefaultState.parameters,docs:{...DefaultState.parameters?.docs,source:{originalSource:'{\n  args: {\n    headerTitle: "Modal Header",\n    isOpen: false\n  }\n}',...DefaultState.parameters?.docs?.source}}},NoCloseButton.parameters={...NoCloseButton.parameters,docs:{...NoCloseButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultState.args,\n    showCloseButton: false\n  }\n}",...NoCloseButton.parameters?.docs?.source}}},NoOverlay.parameters={...NoOverlay.parameters,docs:{...NoOverlay.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...DefaultState.args,\n    showOverlay: false\n  }\n}",...NoOverlay.parameters?.docs?.source}}},WithContentProjection.parameters={...WithContentProjection.parameters,docs:{...WithContentProjection.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...DefaultState.args,\n    children: <>\n                <div slot="header">\n                    <p>Content Header</p>\n                </div>\n                <div slot="body">\n                    <p>Content Body</p>\n                </div>\n                <div slot="footer">\n                    <p>Content footer</p>\n                </div>\n            </>\n  }\n}',...WithContentProjection.parameters?.docs?.source}}}}}]);