"use strict";(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[1561],{"../../node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12/node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js"),__defProp=Object.defineProperty,ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!globalThis?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}var preview_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(preview_exports,{argsEnhancers:()=>argsEnhancers,loaders:()=>loaders});var isInInitialArgs=(name,initialArgs)=>typeof initialArgs[name]>"u"&&!(name in initialArgs),argsEnhancers=[context=>{let{initialArgs,argTypes,parameters:{actions:actions2}}=context;return actions2?.disable||!argTypes?{}:Object.entries(argTypes).filter((([name,argType])=>!!argType.action)).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action("string"==typeof argType.action?argType.action:name)),acc)),{})},context=>{let{initialArgs,argTypes,id,parameters:{actions:actions2}}=context;if(!actions2||actions2.disable||!actions2.argTypesRegex||!argTypes)return{};let argTypesRegex=new RegExp(actions2.argTypesRegex);return Object.entries(argTypes).filter((([name])=>!!argTypesRegex.test(name))).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(name,{implicit:!0,id})),acc)),{})}],subscribed=!1,loaders=[context=>{let{parameters:{actions:actions2}}=context;if(!actions2?.disable&&!subscribed&&"__STORYBOOK_TEST_ON_MOCK_CALL__"in external_STORYBOOK_MODULE_GLOBAL_.global&&"function"==typeof external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__){(0,external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__)(((mock,args)=>{let name=mock.getMockName();"spy"!==name&&(!/^next\/.*::/.test(name)||["next/router::useRouter()","next/navigation::useRouter()","next/navigation::redirect","next/cache::","next/headers::cookies().set","next/headers::cookies().delete","next/headers::headers().set","next/headers::headers().delete"].some((prefix=>name.startsWith(prefix))))&&action(name)(args)})),subscribed=!0}}]},"./src/components/form/schema-form/SchemaForm.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllowDiscardChanges:()=>AllowDiscardChanges,AlowResetToDefaultsWidget:()=>AlowResetToDefaultsWidget,CheckboxesWidget:()=>CheckboxesWidget,CustomSelectWidgetConfigs:()=>CustomSelectWidgetConfigs,Default:()=>Default,DropdownStressTest:()=>DropdownStressTest,FilesUpload:()=>FilesUpload,IfThenElseForm:()=>IfThenElseForm,InlineForm:()=>InlineForm,NotApplyDefaultsWidget:()=>NotApplyDefaultsWidget,SelectBooleanField:()=>SelectBooleanField,TextareaWidget:()=>TextareaWidget,UiSchemaOptions:()=>UiSchemaOptions,WithAdditionalProperties:()=>WithAdditionalProperties,WithArrayFields:()=>WithArrayFields,WithErrorList:()=>WithErrorList,WithSubmitButtonOptions:()=>WithSubmitButtonOptions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SchemaForm_stories});var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),client_esm=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),esm=__webpack_require__("../../packages/ui-components/dist/esm/index.js"),react=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12/node_modules/@storybook/addon-actions/dist/index.mjs");var EShowErrorListType=function(EShowErrorListType){return EShowErrorListType.Top="top",EShowErrorListType.Bottom="bottom",EShowErrorListType.None="none",EShowErrorListType}(EShowErrorListType||{});const SchemaForm_stories={title:"Form/SchemaForm",component:client_esm.TR,render:args=>(0,jsx_runtime.jsx)("div",{style:{height:"500px"},children:(0,jsx_runtime.jsx)(client_esm.TR,{...args,onSubmit:e=>{(0,dist.XI)("submit")(e)}})}),argTypes:{onChange:{action:"change"},onError:{action:"error"},onSubmit:{action:"submit"},showErrorList:{control:{type:"inline-radio"},options:Object.values(EShowErrorListType)},applyDefaults:{control:{type:"inline-radio"},options:Object.values(client_esm.Ekz)}}},Default={args:{showErrorList:!1,liveValidate:!0,disabled:!1,formData:{"number-example":2.3,"integer-example":1,"boolean-example":!0,"enum-example":"foo","string-example":"value","multipleChoicesList-example":["fuzz","qux"]},schema:{type:"object",properties:{"number-example":{title:"Number",type:"number",minimum:-10,maximum:10,description:"Number description"},"integer-example":{title:"Integer",type:"integer",minimum:-10,maximum:10},"boolean-example":{title:"Boolean",type:"boolean"},"enum-example":{title:"Enum",type:"string",enum:["foo","bar"]},"string-example":{title:"String",type:"string",minLength:5,maxLength:10,pattern:"^[a-zA-Z0-9]*$"},"basic-example":{title:"Examples",description:"A input with example values",type:"string",examples:["Firefox","Chrome","Opera","Vivaldi","Safari"]},"multipleChoicesList-example":{type:"array",title:"A multiple choices list",items:{type:"string",enum:["bar","fuzz","qux","bar1","fuzz1","qux1","bar2","fuzz2","qux2"]},uniqueItems:!0}}},uiSchema:{"multipleChoicesList-example":{searchable:!0,selectionClearable:!0}}}},FilesUpload={args:{showErrorList:!1,liveValidate:!0,disabled:!1,formData:{},schema:{type:"object",properties:{multiple_files:{type:"array",maxItems:2,items:{type:"string",format:"data-url"}},single_file:{title:"Single File (with download)",type:"string",format:"data-url"}},required:["single_file","multiple_files"]},uiSchema:{single_file:{"ui:filePreview":!0}}}},IfThenElseForm={args:{showErrorList:!1,liveValidate:!0,disabled:!1,formData:{},schema:{type:"object",properties:{animal:{enum:["Cat","Fish"]}},allOf:[{if:{properties:{animal:{const:"Cat"}}},then:{properties:{food:{type:"string",enum:["meat","grass","fish"]}},required:["food"]}},{if:{properties:{animal:{const:"Fish"}}},then:{properties:{food:{type:"string",enum:["insect","worms"]},water:{type:"string",enum:["lake","sea"]}},required:["food","water"]}},{required:["animal"]}]}}},WithSubmitButtonOptions={args:{showErrorList:!1,liveValidate:!0,disabled:!1,formData:{firstName:"Chuck",active:"wrong",multipleChoicesList:["foo"]},uiSchema:{"ui:submitButtonOptions":{props:{disabled:!1,tooltipText:"Test to button tooltip",tooltipPosition:esm.gJ.Top},norender:!1,submitText:"Save Button"},multipleChoicesList:{"ui:enumDisabled":["bar"]}},schema:{title:"Contextualized errors",type:"object",properties:{firstName:{type:"string",title:"First name",minLength:8,pattern:"\\d+"},active:{type:"boolean",title:"Active"},multipleChoicesList:{type:"array",title:"Pick max two items",uniqueItems:!0,maxItems:2,items:{type:"string",enum:["foo","bar","fuzz"]}}}}}},WithErrorList={args:{showErrorList:"top",liveValidate:!0,disabled:!1,formData:{firstName:"Chuck",active:"wrong",multipleChoicesList:["foo","bar","fuzz"]},schema:{title:"Contextualized errors",type:"object",properties:{firstName:{type:"string",title:"First name",minLength:8,pattern:"\\d+"},active:{type:"boolean",title:"Active"},multipleChoicesList:{type:"array",title:"Pick max two items",uniqueItems:!0,maxItems:2,items:{type:"string",enum:["foo","bar","fuzz"]}}}}}},WithAdditionalProperties={args:{liveValidate:!0,disabled:!1,formData:{},schema:{title:"Additional Properties form",description:"A simple form with additional properties example.",type:"object",required:["firstName","lastName"],additionalProperties:{type:"number"},properties:{firstName:{type:"string",title:"First name"},lastName:{type:"string",title:"Last name"}}}}},WithArrayFields={args:{liveValidate:!0,disabled:!1,uiSchema:{listOfStrings:{items:{"ui:title":" ","ui:emptyValue":""}},minItemsList:{items:{"ui:title":" "}},nestedList:{items:{items:{"ui:title":" "}}},unorderable:{items:{"ui:title":" "},"ui:options":{orderable:!1}},unremovable:{items:{"ui:title":" "},"ui:options":{removable:!1}},noToolbar:{"ui:options":{addable:!1,orderable:!1,removable:!1}},fixedNoToolbar:{"ui:options":{addable:!1,orderable:!1,removable:!1}}},schema:{definitions:{Thing:{type:"object",properties:{name:{type:"string",default:"Default name"}}}},type:"object",properties:{listOfStrings:{type:"array",title:"A list of strings",items:{type:"string",default:"bazinga"}},multipleChoicesList:{type:"array",title:"A multiple choices list",items:{type:"string",enum:["foo","bar","fuzz","qux"]},uniqueItems:!0},fixedItemsList:{type:"array",title:"A list of fixed items",items:[{title:"A string value",type:"string",default:"lorem ipsum"},{title:"a boolean value",type:"boolean"}],additionalItems:{title:"Additional item",type:"number"}},minItemsList:{type:"array",title:"A list with a minimal number of items",minItems:3,items:{$ref:"#/definitions/Thing"}},defaultsAndMinItems:{type:"array",title:"List and item level defaults",minItems:5,default:["carp","trout","bream"],items:{type:"string"}},nestedList:{type:"array",title:"Nested list",items:{type:"array",title:"Inner list",items:{type:"string",default:"lorem ipsum"}}},unorderable:{title:"Unorderable items",type:"array",items:{type:"string",default:"lorem ipsum"}},unremovable:{title:"Unremovable items",type:"array",items:{type:"string",default:"lorem ipsum"}},noToolbar:{title:"No add, remove and order buttons",type:"array",items:{type:"string",default:"lorem ipsum"}},fixedNoToolbar:{title:"Fixed array without buttons",type:"array",items:[{title:"A number",type:"number",default:42},{title:"A boolean",type:"boolean",default:!1}],additionalItems:{title:"A string",type:"string",default:"lorem ipsum"}}}}}},AllowDiscardChanges={render:args=>{const[submittedData,setSubmittedData]=(0,react.useState)({});return(0,jsx_runtime.jsx)(client_esm.TR,{...args,submittedData,onSubmit:data=>{(0,dist.XI)("submit")(data),setSubmittedData(data.formData)},customValidate:(data,errors)=>(console.log("customValidate",data),errors)})},args:{allowDiscardChanges:!0,showErrorList:"top",liveValidate:!0,disabled:!1,formData:{},schema:{title:"Discard changes form",description:"!!! The form is always reset to the values provided in the submittedData property. \nYou need update the submittedData property after a success submit.",type:"object",required:["firstName","lastName"],properties:{firstName:{type:"string",title:"First name",default:"Chuck"},lastName:{type:"string",title:"Last name"},telephone:{type:"string",title:"Telephone",minLength:10}}}}},CustomSelectWidgetConfigs={args:{showErrorList:!1,liveValidate:!0,disabled:!1,allowDiscardChanges:!0,formData:{},schema:{type:"object",properties:{alarm_severities:{type:"array",title:"Severity",uniqueItems:!0,items:{type:"number",oneOf:[{title:"Critical",const:1},{title:"Urgent",const:2},{title:"Advisory",const:3},{title:"Medium",const:4},{title:"Low",const:5}]}},alarm_statuses:{type:"array",title:"Status",uniqueItems:!0,items:{type:"string",oneOf:[{title:"Acknowledged",const:"acknowledged"},{title:"Active",const:"active"},{title:"Resolved",const:"resolved"}]}}}},uiSchema:{alarm_severities:{displayValue:(selectedOptions,options)=>((selectedOptions,options,suffix="filtered")=>{if(0!==selectedOptions.length)return 1===selectedOptions.length&&options[selectedOptions[0]]?options[selectedOptions[0]].label:`${selectedOptions.length} ${suffix}`})(selectedOptions,options,"status")},alarm_statuses:{searchable:!0,selectionClearable:!0}}}},CheckboxesWidget={args:{showErrorList:!1,liveValidate:!0,disabled:!1,allowDiscardChanges:!0,formData:{alarm_statuses:["resolved"]},schema:{type:"object",properties:{alarm_statuses:{type:"array",title:"Status",uniqueItems:!0,minItems:1,items:{type:"string",oneOf:[{title:"Active",const:"active"},{title:"Acknowledged",const:"acknowledged"},{title:"Resolved",const:"resolved"}]}}}},uiSchema:{alarm_statuses:{"ui:widget":"checkboxes","ui:allButton":!0}}}},TextareaWidget={args:{schema:{type:"object",properties:{description:{type:"string",title:"Description"}},required:["description"]},uiSchema:{description:{"ui:widget":"textarea",maxCharLength:200,iconName:esm.ib.Notes,"ui:placeholder":"Add description"},"ui:submitButtonOptions":{norender:!0}}}},InlineForm={args:{showErrorList:!1,liveValidate:!0,disabled:!1,allowDiscardChanges:!0,formData:{shift_info:{start_at:"2022-11-16T00:00:00Z",end_at:"2022-11-17T00:00:00Z"},team_info:[{}],assets_oee:[{asset_name:"asset-name-3"},{asset_name:"asset-name-2"}]},schema:{type:"object",properties:{shift_info:{title:"Shift info",type:"object",properties:{name:{title:"Shift name",type:"string"},start_at:{title:"Starts at",type:"string",format:"date-time"},end_at:{title:"Ends at",type:"string",format:"date-time",formatExclusiveMinimum:{$data:"1/start_at"}}},required:["name","start_at","end_at"]},production_info:{title:"Production info",type:"object",properties:{sku:{title:"SKU",type:"string"},expected_start_at:{title:"Expected to start at",type:"string",format:"date-time"},expected_end_at:{title:"Expected to end at",type:"string",format:"date-time",formatExclusiveMinimum:{$data:"1/expected_start_at"}}},required:["sku","expected_start_at","expected_end_at"]},team_info:{title:"Team info",type:"array",items:{type:"object",properties:{name:{title:"Name",type:"string"},email:{title:"Email",type:"string",format:"email"},phone_country_code:{title:"Phone country code",type:"string"},phone_number:{title:"Phone number",type:"number"},role:{title:"Role",type:"string"},responsible_for:{title:"Asset responsible for",type:"string",oneOf:[{title:"Asset 3",const:"asset-name-3"},{title:"Asset 2",const:"asset-name-2"},{title:"Asset 1",const:"asset-name-1"}]}},required:["name","email","phone_country_code","phone_number","role","responsible_for"]}},assets_oee:{type:"array",items:{type:"object",properties:{asset_name:{type:"string",oneOf:[{title:"Asset 3",const:"asset-name-3"},{title:"Asset 2",const:"asset-name-2"},{title:"Asset 1",const:"asset-name-1"}]},oee_thresholds:{title:"OEE - Thresholds",type:"object",properties:{target:{title:"OEE Target",type:"number",exclusiveMinimum:0},critical_alarm:{title:"OEE Critical",type:"number",exclusiveMinimum:0},warning_alarm:{title:"OEE Urgent",type:"number",exclusiveMinimum:0}},required:["target","critical_alarm","warning_alarm"]},oee_calculation:{title:"OEE - Calculation",type:"object",properties:{ideal_cycle_time:{title:"Ideal cycle time",type:"number",exclusiveMinimum:0},total_units:{title:"Total units",type:"number",exclusiveMinimum:0},good_units:{title:"Good units",type:"number",exclusiveMinimum:0,maximum:{$data:"1/total_units"}},run_time:{title:"Run time",type:"number",exclusiveMinimum:0,maximum:{$data:"1/planned_production_time"}},planned_production_time:{title:"Planned production time",type:"number",minimum:0}},required:["ideal_cycle_time","total_units","good_units","run_time","planned_production_time"]}}}}}},uiSchema:{"ui:inputConfig":{width:"fit-content",minWidth:"132px",maxWidth:"unset"},shift_info:{"ui:inline":!0,"ui:inputWidth":"fit-content"},production_info:{"ui:inline":!0,"ui:inputWidth":"200px"},team_info:{"ui:itemPrefix":"Collaborator","ui:options":{addable:!0,orderable:!1,removable:!0},items:{"ui:title":"","ui:itemPrefix":"Collaborator","ui:inline":!0,"ui:inputWidth":"fit-content",responsible_for:{searchable:!0,"ui:placeholder":""}}},assets_oee:{"ui:title":"","ui:options":{addable:!1,orderable:!1,removable:!1},"ui:inputWidth":"fit-content",items:{"ui:title":"","ui:fieldset":!0,asset_name:{"ui:widget":"readOnlyValue","ui:readonly":!0,"ui:options":{label:!1}},oee_thresholds:{"ui:inline":!0,"ui:inputWidth":"fit-content"},oee_calculation:{"ui:inline":!0,"ui:inputWidth":"400px"}}}}}},NotApplyDefaultsWidget={args:{applyDefaults:client_esm.Ekz.Never,liveValidate:!0,formContext:{showDefaultValueHelper:!0,defaultValueHelperPrefix:"Default: "},schema:{type:"object",properties:{title:{type:"string",title:"Title:",default:"lorem ipsum"},description:{type:"string",title:"Description:",default:"lorem ipsum lorem ipsum lorem ipsum"}},required:["title"]},uiSchema:{description:{"ui:options":{placeholder:"Add description",showDefaultValueHelper:!1}}}}},AlowResetToDefaultsWidget={args:{applyDefaults:client_esm.Ekz.Never,allowDiscardChanges:!0,allowResetToDefaults:!0,liveValidate:!0,formContext:{showDefaultValueHelper:!0,defaultValueHelperPrefix:"Default: "},schema:{type:"object",properties:{title:{type:"string",title:"Title:",default:"lorem ipsum"},description:{type:"string",title:"Description:",default:"lorem ipsum lorem ipsum lorem ipsum"}},required:["title"]},uiSchema:{description:{"ui:options":{placeholder:"Add description",showDefaultValueHelper:!0}}}}},UiSchemaOptions={args:{showErrorList:!1,liveValidate:!0,disabled:!1,formData:{"number-example":2.3,"integer-example":1,"boolean-example":!0,"enum-example":"foo","string-example":"value","multipleChoicesList-example":["fuzz","qux"]},schema:{type:"object",properties:{"number-example":{title:"Number",type:"number",minimum:-10,maximum:10,description:"Number description"},"integer-example":{title:"Integer",type:"integer",minimum:-10,maximum:10},"boolean-example":{title:"Boolean",type:"boolean"},"enum-example":{title:"Enum",type:"string",enum:["foo","bar"]},"string-example":{title:"String",type:"string",minLength:5,maxLength:10,pattern:"^[a-zA-Z0-9]*$"},"basic-example":{title:"Examples",description:"A input with example values",type:"string",examples:["Firefox","Chrome","Opera","Vivaldi","Safari"]},"multipleChoicesList-example":{type:"array",title:"A multiple choices list",items:{type:"string",enum:["bar","fuzz","qux","bar1","fuzz1","qux1","bar2","fuzz2","qux2"]},uniqueItems:!0}}},uiSchema:{"ui:componentSize":esm.Cz.Small,"ui:dropdownConfig":{zIndex:200},"multipleChoicesList-example":{zIndex:10,componentSize:esm.Cz.Large,searchable:!0,selectionClearable:!0}}}},SelectBooleanField={args:{schema:{type:"object",properties:{value:{type:"boolean",oneOf:[{title:"Truthy",const:!0},{title:"Falsy",const:!1}]}},required:["value"]},uiSchema:{value:{"ui:widget":"select"}}}},DropdownStressTest={args:{schema:{type:"object",properties:{single:{type:"string",title:"",oneOf:Array.from({length:3e3},((_,i)=>({const:`option-${i+1}`,title:`Option ${i+1}`})))},multiple:{type:"array",title:"",uniqueItems:!0,items:{type:"string",oneOf:Array.from({length:3e3},((_,i)=>({const:`option-${i+1}`,title:`Option ${i+1}`})))}}}},uiSchema:{single:{searchable:!0,selectionClearable:!0},multiple:{searchable:!0,selectionClearable:!0}}}},__namedExportsOrder=["Default","FilesUpload","IfThenElseForm","WithSubmitButtonOptions","WithErrorList","WithAdditionalProperties","WithArrayFields","AllowDiscardChanges","CustomSelectWidgetConfigs","CheckboxesWidget","TextareaWidget","InlineForm","NotApplyDefaultsWidget","AlowResetToDefaultsWidget","UiSchemaOptions","SelectBooleanField","DropdownStressTest"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    formData: {\n      "number-example": 2.3,\n      "integer-example": 1,\n      "boolean-example": true,\n      "enum-example": "foo",\n      "string-example": "value",\n      "multipleChoicesList-example": ["fuzz", "qux"]\n    },\n    schema: {\n      type: "object",\n      properties: {\n        "number-example": {\n          title: "Number",\n          type: "number",\n          minimum: -10.0,\n          maximum: 10,\n          description: "Number description"\n        },\n        "integer-example": {\n          title: "Integer",\n          type: "integer",\n          minimum: -10,\n          maximum: 10\n        },\n        "boolean-example": {\n          title: "Boolean",\n          type: "boolean"\n        },\n        "enum-example": {\n          title: "Enum",\n          type: "string",\n          enum: ["foo", "bar"]\n        },\n        "string-example": {\n          title: "String",\n          type: "string",\n          minLength: 5,\n          maxLength: 10,\n          pattern: "^[a-zA-Z0-9]*$"\n        },\n        "basic-example": {\n          title: "Examples",\n          description: "A input with example values",\n          type: "string",\n          examples: ["Firefox", "Chrome", "Opera", "Vivaldi", "Safari"]\n        },\n        "multipleChoicesList-example": {\n          type: "array",\n          title: "A multiple choices list",\n          items: {\n            type: "string",\n            enum: ["bar", "fuzz", "qux", "bar1", "fuzz1", "qux1", "bar2", "fuzz2", "qux2"]\n          },\n          uniqueItems: true\n        }\n      }\n    },\n    uiSchema: {\n      "multipleChoicesList-example": {\n        searchable: true,\n        selectionClearable: true\n      }\n    }\n  }\n}',...Default.parameters?.docs?.source}}},FilesUpload.parameters={...FilesUpload.parameters,docs:{...FilesUpload.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    formData: {},\n    schema: {\n      type: "object",\n      properties: {\n        multiple_files: {\n          type: "array",\n          maxItems: 2,\n          items: {\n            type: "string",\n            format: "data-url"\n          }\n        },\n        single_file: {\n          title: "Single File (with download)",\n          type: "string",\n          format: "data-url"\n        }\n      },\n      required: ["single_file", "multiple_files"]\n    },\n    uiSchema: {\n      single_file: {\n        "ui:filePreview": true\n      }\n    }\n  }\n}',...FilesUpload.parameters?.docs?.source}}},IfThenElseForm.parameters={...IfThenElseForm.parameters,docs:{...IfThenElseForm.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    formData: {},\n    schema: {\n      type: "object",\n      properties: {\n        animal: {\n          enum: ["Cat", "Fish"]\n        }\n      },\n      allOf: [{\n        if: {\n          properties: {\n            animal: {\n              const: "Cat"\n            }\n          }\n        },\n        then: {\n          properties: {\n            food: {\n              type: "string",\n              enum: ["meat", "grass", "fish"]\n            }\n          },\n          required: ["food"]\n        }\n      }, {\n        if: {\n          properties: {\n            animal: {\n              const: "Fish"\n            }\n          }\n        },\n        then: {\n          properties: {\n            food: {\n              type: "string",\n              enum: ["insect", "worms"]\n            },\n            water: {\n              type: "string",\n              enum: ["lake", "sea"]\n            }\n          },\n          required: ["food", "water"]\n        }\n      }, {\n        required: ["animal"]\n      }]\n    }\n  }\n}',...IfThenElseForm.parameters?.docs?.source}}},WithSubmitButtonOptions.parameters={...WithSubmitButtonOptions.parameters,docs:{...WithSubmitButtonOptions.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    formData: {\n      firstName: "Chuck",\n      active: "wrong",\n      multipleChoicesList: ["foo"]\n    },\n    uiSchema: {\n      "ui:submitButtonOptions": {\n        props: {\n          disabled: false,\n          tooltipText: "Test to button tooltip",\n          tooltipPosition: ETooltipPosition.Top\n        },\n        norender: false,\n        submitText: "Save Button"\n      },\n      multipleChoicesList: {\n        "ui:enumDisabled": ["bar"]\n      }\n    },\n    schema: {\n      title: "Contextualized errors",\n      type: "object",\n      properties: {\n        firstName: {\n          type: "string",\n          title: "First name",\n          minLength: 8,\n          pattern: "\\\\d+"\n        },\n        active: {\n          type: "boolean",\n          title: "Active"\n        },\n        multipleChoicesList: {\n          type: "array",\n          title: "Pick max two items",\n          uniqueItems: true,\n          maxItems: 2,\n          items: {\n            type: "string",\n            enum: ["foo", "bar", "fuzz"]\n          }\n        }\n      }\n    }\n  }\n}',...WithSubmitButtonOptions.parameters?.docs?.source}}},WithErrorList.parameters={...WithErrorList.parameters,docs:{...WithErrorList.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: "top",\n    liveValidate: true,\n    disabled: false,\n    formData: {\n      firstName: "Chuck",\n      active: "wrong",\n      multipleChoicesList: ["foo", "bar", "fuzz"]\n    },\n    schema: {\n      title: "Contextualized errors",\n      type: "object",\n      properties: {\n        firstName: {\n          type: "string",\n          title: "First name",\n          minLength: 8,\n          pattern: "\\\\d+"\n        },\n        active: {\n          type: "boolean",\n          title: "Active"\n        },\n        multipleChoicesList: {\n          type: "array",\n          title: "Pick max two items",\n          uniqueItems: true,\n          maxItems: 2,\n          items: {\n            type: "string",\n            enum: ["foo", "bar", "fuzz"]\n          }\n        }\n      }\n    }\n  }\n}',...WithErrorList.parameters?.docs?.source}}},WithAdditionalProperties.parameters={...WithAdditionalProperties.parameters,docs:{...WithAdditionalProperties.parameters?.docs,source:{originalSource:'{\n  args: {\n    liveValidate: true,\n    disabled: false,\n    formData: {},\n    schema: {\n      title: "Additional Properties form",\n      description: "A simple form with additional properties example.",\n      type: "object",\n      required: ["firstName", "lastName"],\n      additionalProperties: {\n        type: "number"\n      },\n      properties: {\n        firstName: {\n          type: "string",\n          title: "First name"\n        },\n        lastName: {\n          type: "string",\n          title: "Last name"\n        }\n      }\n    }\n  }\n}',...WithAdditionalProperties.parameters?.docs?.source}}},WithArrayFields.parameters={...WithArrayFields.parameters,docs:{...WithArrayFields.parameters?.docs,source:{originalSource:'{\n  args: {\n    liveValidate: true,\n    disabled: false,\n    uiSchema: {\n      listOfStrings: {\n        items: {\n          "ui:title": " ",\n          "ui:emptyValue": ""\n        }\n      },\n      minItemsList: {\n        items: {\n          "ui:title": " "\n        }\n      },\n      nestedList: {\n        items: {\n          items: {\n            "ui:title": " "\n          }\n        }\n      },\n      unorderable: {\n        items: {\n          "ui:title": " "\n        },\n        "ui:options": {\n          orderable: false\n        }\n      },\n      unremovable: {\n        items: {\n          "ui:title": " "\n        },\n        "ui:options": {\n          removable: false\n        }\n      },\n      noToolbar: {\n        "ui:options": {\n          addable: false,\n          orderable: false,\n          removable: false\n        }\n      },\n      fixedNoToolbar: {\n        "ui:options": {\n          addable: false,\n          orderable: false,\n          removable: false\n        }\n      }\n    },\n    schema: {\n      definitions: {\n        Thing: {\n          type: "object",\n          properties: {\n            name: {\n              type: "string",\n              default: "Default name"\n            }\n          }\n        }\n      },\n      type: "object",\n      properties: {\n        listOfStrings: {\n          type: "array",\n          title: "A list of strings",\n          items: {\n            type: "string",\n            default: "bazinga"\n          }\n        },\n        multipleChoicesList: {\n          type: "array",\n          title: "A multiple choices list",\n          items: {\n            type: "string",\n            enum: ["foo", "bar", "fuzz", "qux"]\n          },\n          uniqueItems: true\n        },\n        fixedItemsList: {\n          type: "array",\n          title: "A list of fixed items",\n          items: [{\n            title: "A string value",\n            type: "string",\n            default: "lorem ipsum"\n          }, {\n            title: "a boolean value",\n            type: "boolean"\n          }],\n          additionalItems: {\n            title: "Additional item",\n            type: "number"\n          }\n        },\n        minItemsList: {\n          type: "array",\n          title: "A list with a minimal number of items",\n          minItems: 3,\n          items: {\n            $ref: "#/definitions/Thing"\n          }\n        },\n        defaultsAndMinItems: {\n          type: "array",\n          title: "List and item level defaults",\n          minItems: 5,\n          default: ["carp", "trout", "bream"],\n          items: {\n            type: "string"\n          }\n        },\n        nestedList: {\n          type: "array",\n          title: "Nested list",\n          items: {\n            type: "array",\n            title: "Inner list",\n            items: {\n              type: "string",\n              default: "lorem ipsum"\n            }\n          }\n        },\n        unorderable: {\n          title: "Unorderable items",\n          type: "array",\n          items: {\n            type: "string",\n            default: "lorem ipsum"\n          }\n        },\n        unremovable: {\n          title: "Unremovable items",\n          type: "array",\n          items: {\n            type: "string",\n            default: "lorem ipsum"\n          }\n        },\n        noToolbar: {\n          title: "No add, remove and order buttons",\n          type: "array",\n          items: {\n            type: "string",\n            default: "lorem ipsum"\n          }\n        },\n        fixedNoToolbar: {\n          title: "Fixed array without buttons",\n          type: "array",\n          items: [{\n            title: "A number",\n            type: "number",\n            default: 42\n          }, {\n            title: "A boolean",\n            type: "boolean",\n            default: false\n          }],\n          additionalItems: {\n            title: "A string",\n            type: "string",\n            default: "lorem ipsum"\n          }\n        }\n      }\n    }\n  }\n}',...WithArrayFields.parameters?.docs?.source}}},AllowDiscardChanges.parameters={...AllowDiscardChanges.parameters,docs:{...AllowDiscardChanges.parameters?.docs,source:{originalSource:'{\n  render: DiscardChangesTemplate,\n  args: {\n    allowDiscardChanges: true,\n    showErrorList: "top",\n    liveValidate: true,\n    disabled: false,\n    formData: {},\n    schema: {\n      title: "Discard changes form",\n      description: "!!! The form is always reset to the values provided in the submittedData property. \\nYou need update the submittedData property after a success submit.",\n      type: "object",\n      required: ["firstName", "lastName"],\n      properties: {\n        firstName: {\n          type: "string",\n          title: "First name",\n          default: "Chuck"\n        },\n        lastName: {\n          type: "string",\n          title: "Last name"\n        },\n        telephone: {\n          type: "string",\n          title: "Telephone",\n          minLength: 10\n        }\n      }\n    }\n  }\n}',...AllowDiscardChanges.parameters?.docs?.source}}},CustomSelectWidgetConfigs.parameters={...CustomSelectWidgetConfigs.parameters,docs:{...CustomSelectWidgetConfigs.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    allowDiscardChanges: true,\n    formData: {},\n    schema: {\n      type: "object",\n      properties: {\n        alarm_severities: {\n          type: "array",\n          title: "Severity",\n          uniqueItems: true,\n          items: {\n            type: "number",\n            oneOf: [{\n              title: "Critical",\n              const: 1\n            }, {\n              title: "Urgent",\n              const: 2\n            }, {\n              title: "Advisory",\n              const: 3\n            }, {\n              title: "Medium",\n              const: 4\n            }, {\n              title: "Low",\n              const: 5\n            }]\n          }\n        },\n        alarm_statuses: {\n          type: "array",\n          title: "Status",\n          uniqueItems: true,\n          items: {\n            type: "string",\n            oneOf: [{\n              title: "Acknowledged",\n              const: "acknowledged"\n            }, {\n              title: "Active",\n              const: "active"\n            }, {\n              title: "Resolved",\n              const: "resolved"\n            }]\n          }\n        }\n      }\n    },\n    uiSchema: {\n      alarm_severities: {\n        displayValue(selectedOptions: string[], options: ISelectSingleOptions | ISelectMultiOptions) {\n          return getDropdownDisplayValue(selectedOptions, options, "status");\n        }\n      },\n      alarm_statuses: {\n        searchable: true,\n        selectionClearable: true\n      }\n    }\n  }\n}',...CustomSelectWidgetConfigs.parameters?.docs?.source}}},CheckboxesWidget.parameters={...CheckboxesWidget.parameters,docs:{...CheckboxesWidget.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    allowDiscardChanges: true,\n    formData: {\n      alarm_statuses: ["resolved"]\n    },\n    schema: {\n      type: "object",\n      properties: {\n        alarm_statuses: {\n          type: "array",\n          title: "Status",\n          uniqueItems: true,\n          minItems: 1,\n          items: {\n            type: "string",\n            oneOf: [{\n              title: "Active",\n              const: "active"\n            }, {\n              title: "Acknowledged",\n              const: "acknowledged"\n            }, {\n              title: "Resolved",\n              const: "resolved"\n            }]\n          }\n        }\n      }\n    },\n    uiSchema: {\n      alarm_statuses: {\n        "ui:widget": "checkboxes",\n        "ui:allButton": true\n      }\n    }\n  }\n}',...CheckboxesWidget.parameters?.docs?.source}}},TextareaWidget.parameters={...TextareaWidget.parameters,docs:{...TextareaWidget.parameters?.docs,source:{originalSource:'{\n  args: {\n    schema: {\n      type: "object",\n      properties: {\n        description: {\n          type: "string",\n          title: "Description"\n        }\n      },\n      required: ["description"]\n    },\n    uiSchema: {\n      description: {\n        "ui:widget": "textarea",\n        maxCharLength: 200,\n        iconName: EIconName.Notes,\n        "ui:placeholder": "Add description"\n      },\n      "ui:submitButtonOptions": {\n        norender: true\n      }\n    }\n  }\n}',...TextareaWidget.parameters?.docs?.source}}},InlineForm.parameters={...InlineForm.parameters,docs:{...InlineForm.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    allowDiscardChanges: true,\n    formData: {\n      shift_info: {\n        start_at: "2022-11-16T00:00:00Z",\n        end_at: "2022-11-17T00:00:00Z"\n      },\n      team_info: [{}],\n      assets_oee: [{\n        asset_name: "asset-name-3"\n      }, {\n        asset_name: "asset-name-2"\n      }]\n    },\n    schema: inlineSchema,\n    uiSchema: inlineUiSchema\n  }\n}',...InlineForm.parameters?.docs?.source}}},NotApplyDefaultsWidget.parameters={...NotApplyDefaultsWidget.parameters,docs:{...NotApplyDefaultsWidget.parameters?.docs,source:{originalSource:'{\n  args: {\n    applyDefaults: EApplyDefaults.Never,\n    liveValidate: true,\n    formContext: {\n      showDefaultValueHelper: true,\n      defaultValueHelperPrefix: "Default: "\n    },\n    schema: {\n      type: "object",\n      properties: {\n        title: {\n          type: "string",\n          title: "Title:",\n          default: "lorem ipsum"\n        },\n        description: {\n          type: "string",\n          title: "Description:",\n          default: "lorem ipsum lorem ipsum lorem ipsum"\n        }\n      },\n      required: ["title"]\n    },\n    uiSchema: {\n      description: {\n        "ui:options": {\n          placeholder: "Add description",\n          showDefaultValueHelper: false\n        }\n      }\n    }\n  }\n}',...NotApplyDefaultsWidget.parameters?.docs?.source}}},AlowResetToDefaultsWidget.parameters={...AlowResetToDefaultsWidget.parameters,docs:{...AlowResetToDefaultsWidget.parameters?.docs,source:{originalSource:'{\n  args: {\n    applyDefaults: EApplyDefaults.Never,\n    allowDiscardChanges: true,\n    allowResetToDefaults: true,\n    liveValidate: true,\n    formContext: {\n      showDefaultValueHelper: true,\n      defaultValueHelperPrefix: "Default: "\n    },\n    schema: {\n      type: "object",\n      properties: {\n        title: {\n          type: "string",\n          title: "Title:",\n          default: "lorem ipsum"\n        },\n        description: {\n          type: "string",\n          title: "Description:",\n          default: "lorem ipsum lorem ipsum lorem ipsum"\n        }\n      },\n      required: ["title"]\n    },\n    uiSchema: {\n      description: {\n        "ui:options": {\n          placeholder: "Add description",\n          showDefaultValueHelper: true\n        }\n      }\n    }\n  }\n}',...AlowResetToDefaultsWidget.parameters?.docs?.source}}},UiSchemaOptions.parameters={...UiSchemaOptions.parameters,docs:{...UiSchemaOptions.parameters?.docs,source:{originalSource:'{\n  args: {\n    showErrorList: false,\n    liveValidate: true,\n    disabled: false,\n    formData: {\n      "number-example": 2.3,\n      "integer-example": 1,\n      "boolean-example": true,\n      "enum-example": "foo",\n      "string-example": "value",\n      "multipleChoicesList-example": ["fuzz", "qux"]\n    },\n    schema: {\n      type: "object",\n      properties: {\n        "number-example": {\n          title: "Number",\n          type: "number",\n          minimum: -10.0,\n          maximum: 10,\n          description: "Number description"\n        },\n        "integer-example": {\n          title: "Integer",\n          type: "integer",\n          minimum: -10,\n          maximum: 10\n        },\n        "boolean-example": {\n          title: "Boolean",\n          type: "boolean"\n        },\n        "enum-example": {\n          title: "Enum",\n          type: "string",\n          enum: ["foo", "bar"]\n        },\n        "string-example": {\n          title: "String",\n          type: "string",\n          minLength: 5,\n          maxLength: 10,\n          pattern: "^[a-zA-Z0-9]*$"\n        },\n        "basic-example": {\n          title: "Examples",\n          description: "A input with example values",\n          type: "string",\n          examples: ["Firefox", "Chrome", "Opera", "Vivaldi", "Safari"]\n        },\n        "multipleChoicesList-example": {\n          type: "array",\n          title: "A multiple choices list",\n          items: {\n            type: "string",\n            enum: ["bar", "fuzz", "qux", "bar1", "fuzz1", "qux1", "bar2", "fuzz2", "qux2"]\n          },\n          uniqueItems: true\n        }\n      }\n    },\n    /**\n     *  Here we are passing the ui defaults for the inputs to have a component large size\n     * However, the values applied to the multipleChoicesList-example will be the values inside the property key.\n     * Therefore, when we have default values, it is possible to override if needed.\n     *  */\n    uiSchema: {\n      "ui:componentSize": EComponentSize.Small,\n      "ui:dropdownConfig": {\n        zIndex: 200\n      },\n      "multipleChoicesList-example": {\n        zIndex: 10,\n        componentSize: EComponentSize.Large,\n        searchable: true,\n        selectionClearable: true\n      }\n    }\n  }\n}',...UiSchemaOptions.parameters?.docs?.source}}},SelectBooleanField.parameters={...SelectBooleanField.parameters,docs:{...SelectBooleanField.parameters?.docs,source:{originalSource:'{\n  args: {\n    schema: {\n      type: "object",\n      properties: {\n        value: {\n          type: "boolean",\n          oneOf: [{\n            title: "Truthy",\n            const: true\n          }, {\n            title: "Falsy",\n            const: false\n          }]\n        }\n      },\n      required: ["value"]\n    },\n    uiSchema: {\n      value: {\n        "ui:widget": "select"\n      }\n    }\n  }\n}',...SelectBooleanField.parameters?.docs?.source}}},DropdownStressTest.parameters={...DropdownStressTest.parameters,docs:{...DropdownStressTest.parameters?.docs,source:{originalSource:'{\n  args: {\n    schema: {\n      type: "object",\n      properties: {\n        single: {\n          type: "string",\n          title: "",\n          oneOf: Array.from({\n            length: 3000\n          }, (_, i) => ({\n            const: `option-${i + 1}`,\n            title: `Option ${i + 1}`\n          }))\n        },\n        multiple: {\n          type: "array",\n          title: "",\n          uniqueItems: true,\n          items: {\n            type: "string",\n            oneOf: Array.from({\n              length: 3000\n            }, (_, i) => ({\n              const: `option-${i + 1}`,\n              title: `Option ${i + 1}`\n            }))\n          }\n        }\n      }\n    },\n    uiSchema: {\n      single: {\n        searchable: true,\n        selectionClearable: true\n      },\n      multiple: {\n        searchable: true,\n        selectionClearable: true\n      }\n    }\n  }\n}',...DropdownStressTest.parameters?.docs?.source}}}}}]);