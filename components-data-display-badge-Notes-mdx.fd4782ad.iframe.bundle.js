(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[4973,8113],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/data-display/badge/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject="\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from 'react';\n\nimport { KvBadge, EBadgeState } from '@kelvininc/react-ui-components/client';\n\nexport const BadgeExample: React.FC = () => (\n\t<>\n\t\t{/*-- Default --*/}\n\t\t<KvBadge>Badge</KvBadge>\n\n\t\t{/*-- Info --*/}\n\t\t<KvBadge state={EBadgeState.Info}>Info Badge</KvBadge>\n\n\t\t{/*-- Warning --*/}\n\t\t<KvBadge state={EBadgeState.Warning}>Warning Badge</KvBadge>\n\n\t\t{/*-- Error --*/}\n\t\t<KvBadge state={EBadgeState.Error}>Error Badge</KvBadge>\n\n\t\t{/*-- Success --*/}\n\t\t<KvBadge state={EBadgeState.Success}>Success Badge</KvBadge>\n\t</>x\n);\n```\n\n\n\n## Properties\n\n| Property | Attribute | Description                         | Type                                                                                                      | Default            |\n| -------- | --------- | ----------------------------------- | --------------------------------------------------------------------------------------------------------- | ------------------ |\n| `state`  | `state`   | (optional) Defines the badge state. | `EBadgeState.Error \\| EBadgeState.Info \\| EBadgeState.None \\| EBadgeState.Success \\| EBadgeState.Warning` | `EBadgeState.None` |\n\n\n## Shadow Parts\n\n| Part      | Description |\n| --------- | ----------- |\n| `\"badge\"` | The badge.  |\n\n\n## CSS Custom Properties\n\n| Name                               | Description                                     |\n| ---------------------------------- | ----------------------------------------------- |\n| `--badge-background-color-error`   | Badge's background color when state is error.   |\n| `--badge-background-color-error`   | Badge's background color when state is error.   |\n| `--badge-background-color-info`    | Badge's background color when state is info.    |\n| `--badge-background-color-info`    | Badge's background color when state is info.    |\n| `--badge-background-color-none`    | Badge's background color when state is none.    |\n| `--badge-background-color-none`    | Badge's background color when state is none.    |\n| `--badge-background-color-success` | Badge's background color when state is success. |\n| `--badge-background-color-success` | Badge's background color when state is success. |\n| `--badge-background-color-warning` | Badge's background color when state is warning. |\n| `--badge-background-color-warning` | Badge's background color when state is warning. |\n| `--badge-height`                   | Badge's height.                                 |\n| `--badge-height`                   | Badge's height.                                 |\n| `--badge-max-width`                | Badge's maximum width.                          |\n| `--badge-max-width`                | Badge's maximum width.                          |\n| `--badge-min-width`                | Badge's minimum width.                          |\n| `--badge-min-width`                | Badge's minimum width.                          |\n| `--badge-text-color-error`         | Badge's text color when state is error.         |\n| `--badge-text-color-error`         | Badge's text color when state is error.         |\n| `--badge-text-color-info`          | Badge's text color when state is info.          |\n| `--badge-text-color-info`          | Badge's text color when state is info.          |\n| `--badge-text-color-none`          | Badge's text color when state is none.          |\n| `--badge-text-color-none`          | Badge's text color when state is none.          |\n| `--badge-text-color-success`       | Badge's text color when state is success.       |\n| `--badge-text-color-success`       | Badge's text color when state is success.       |\n| `--badge-text-color-warning`       | Badge's text color when state is warning.       |\n| `--badge-text-color-warning`       | Badge's text color when state is warning.       |\n| `--badge-warning-text-color`       | Badge's text color when state is warning.       |\n| `--badge-warning-text-color`       | Badge's text color when state is warning.       |\n| `--badge-width`                    | Badge's width.                                  |\n| `--badge-width`                    | Badge's width.                                  |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-action-button-icon](../action-button-icon)\n - [kv-text-field](../text-field)\n - [kv-tree-item](../tree-item)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-action-button-icon --\x3e kv-badge\n  kv-text-field --\x3e kv-badge\n  kv-tree-item --\x3e kv-badge\n  style kv-badge fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),Badge_stories=__webpack_require__("./src/components/data-display/badge/Badge.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Badge_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/data-display/badge/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultState:()=>DefaultState,ErrorState:()=>ErrorState,InfoState:()=>InfoState,SuccessState:()=>SuccessState,WarningState:()=>WarningState,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Badge",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.lBw,argTypes:{state:{control:{type:"select"},options:Object.values(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.KW)}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_1__.lBw,{...args,children:"12"})},DefaultState={args:{}},InfoState={args:{state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.KW.Info}},WarningState={args:{state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.KW.Warning}},ErrorState={args:{state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.KW.Error}},SuccessState={args:{state:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_2__.KW.Success}},__namedExportsOrder=["DefaultState","InfoState","WarningState","ErrorState","SuccessState"];DefaultState.parameters={...DefaultState.parameters,docs:{...DefaultState.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...DefaultState.parameters?.docs?.source}}},InfoState.parameters={...InfoState.parameters,docs:{...InfoState.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: EBadgeState.Info\n  }\n}",...InfoState.parameters?.docs?.source}}},WarningState.parameters={...WarningState.parameters,docs:{...WarningState.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: EBadgeState.Warning\n  }\n}",...WarningState.parameters?.docs?.source}}},ErrorState.parameters={...ErrorState.parameters,docs:{...ErrorState.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: EBadgeState.Error\n  }\n}",...ErrorState.parameters?.docs?.source}}},SuccessState.parameters={...SuccessState.parameters,docs:{...SuccessState.parameters?.docs,source:{originalSource:"{\n  args: {\n    state: EBadgeState.Success\n  }\n}",...SuccessState.parameters?.docs?.source}}}}}]);