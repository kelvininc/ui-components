(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[6292,4318],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/feedback/toggle-tip/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject='\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from \'react\';\n\nimport { KvToggleTip, KvIcon, KvActionButton, EIconName, ETooltipPosition, EActionButtonType } from \'@kelvininc/react-ui-components/client\';\n\nexport const ToggleTipExample: React.FC = () => (\n  <>\n    {/*-- Default --*/}\n\t<KvToggleTip text="Toggle tip">\n\t\t<KvIcon slot="open-element-slot" name={EIconName.Info}/>\n\t\t<KvActionButton slot="content-slot" type={EActionButtonType.Primary}>Learn More</KvActionButton>\n\t</KvToggleTip>\n\n\t{/*-- With Fixed Position --*/}\n\t<KvToggleTip text="Toggle tip" position={ETooltipPosition.Left}>\n\t\t<KvIcon slot="open-element-slot" name={EIconName.Info}/>\n\t\t<KvActionButton slot="content-slot" type={EActionButtonType.Primary}>Learn More</KvActionButton>\n\t</KvToggleTip>\n\n\t{/*-- With Allowed Positions --*/}\n\t<KvToggleTip text="Toggle tip" allowedPositions={[ETooltipPosition.Top, ETooltipPosition.Bottom]}>\n\t\t<KvIcon slot="open-element-slot" name={EIconName.Info}/>\n\t\t<KvActionButton slot="content-slot" type={EActionButtonType.Primary}>Learn More</KvActionButton>\n\t</KvToggleTip>\n  </>\n);\n```\n\n\n\n## Properties\n\n| Property           | Attribute           | Description                                                                                                                                                                             | Type                                                                                                                                                                                                                                                                                                                                                                           | Default                  |\n| ------------------ | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------ |\n| `allowedPositions` | `allowed-positions` | (optional) Array of allowed positions of toggle tip (if defined the \'position\' is ignored)                                                                                              | `ETooltipPosition[]`                                                                                                                                                                                                                                                                                                                                                           | `undefined`              |\n| `customClass`      | `custom-class`      | (optional) Additional classes to apply for custom CSS. If multiple classes are provided they should be separated by spaces. It is also valid to provide CssClassMap with boolean logic. | `CssClassMap \\| string \\| string[]`                                                                                                                                                                                                                                                                                                                                            | `\'\'`                     |\n| `disabled`         | `disabled`          | (optional) if true it will disable clicks to open toggle tip                                                                                                                            | `boolean`                                                                                                                                                                                                                                                                                                                                                                      | `false`                  |\n| `isFixed`          | `is-fixed`          | (optional) if true it will ignore outside clicks to close the toggle tip                                                                                                                | `boolean`                                                                                                                                                                                                                                                                                                                                                                      | `false`                  |\n| `isOpen`           | `is-open`           | (optional) Set open state of toggle tip, default false                                                                                                                                  | `boolean`                                                                                                                                                                                                                                                                                                                                                                      | `false`                  |\n| `options`          | `options`           | (optional) Object with tooltip position options                                                                                                                                         | `{ strategy?: Strategy; placement?: Placement; middleware?: (false \\| { name: string; options?: any; fn: (state: { x: number; y: number; initialPlacement: Placement; strategy: Strategy; platform: Platform; placement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<MiddlewareReturn>; })[]; platform?: Platform; }` | `DEFAULT_TOOLTIP_CONFIG` |\n| `position`         | `position`          | (optional) Position of toggletip                                                                                                                                                        | `ETooltipPosition.Bottom \\| ETooltipPosition.BottomEnd \\| ETooltipPosition.BottomStart \\| ETooltipPosition.Left \\| ETooltipPosition.LeftEnd \\| ETooltipPosition.LeftStart \\| ETooltipPosition.Right \\| ETooltipPosition.RightEnd \\| ETooltipPosition.RightStart \\| ETooltipPosition.Top \\| ETooltipPosition.TopEnd \\| ETooltipPosition.TopStart`                               | `undefined`              |\n| `text`             | `text`              | (optional) Text of toggletip                                                                                                                                                            | `string`                                                                                                                                                                                                                                                                                                                                                                       | `undefined`              |\n| `withArrow`        | `with-arrow`        | (optional) if true it will render an arrow pointing to the opening element                                                                                                              | `boolean`                                                                                                                                                                                                                                                                                                                                                                      | `false`                  |\n\n\n## Events\n\n| Event             | Description                                   | Type                   |\n| ----------------- | --------------------------------------------- | ---------------------- |\n| `openStateChange` | Emitted when the dropdown opens state changes | `CustomEvent<boolean>` |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-description-list](../description-list)\n - [kv-wizard-header](../wizard-header)\n\n### Depends on\n\n- [kv-portal](../portal)\n- [kv-tooltip-text](../tooltip-text)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-toggle-tip --\x3e kv-portal\n  kv-toggle-tip --\x3e kv-tooltip-text\n  kv-description-list --\x3e kv-toggle-tip\n  kv-wizard-header --\x3e kv-toggle-tip\n  style kv-toggle-tip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),ToggleTip_stories=__webpack_require__("./src/components/feedback/toggle-tip/ToggleTip.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ToggleTip_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/feedback/toggle-tip/ToggleTip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllowedPositionsState:()=>AllowedPositionsState,DefaultState:()=>DefaultState,DisabledToggleTipState:()=>DisabledToggleTipState,FixedPositionState:()=>FixedPositionState,WithArrowState:()=>WithArrowState,WithCustomClass:()=>WithCustomClass,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ToggleTip_stories});var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),client_esm=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),esm=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const ToggleTip_stories={title:"Feedback/ToggleTip",component:client_esm.$BR,render:args=>(0,jsx_runtime.jsxs)(client_esm.$BR,{...args,children:[(0,jsx_runtime.jsx)(client_esm.rL$,{slot:"open-element-slot",name:esm.ib.Info}),(0,jsx_runtime.jsx)(client_esm.BEc,{slot:"content-slot",type:esm._R.Primary,text:"Learn More"})]}),argTypes:{text:{type:"text"},position:{control:{type:"select"},options:Object.values(esm.gJ)},isOpen:{control:{type:"boolean"}},withArrow:{control:{type:"boolean"}},isFixed:{control:{type:"boolean"}},allowedPositions:{control:{type:"multi-select"},options:Object.values(esm.gJ)},onOpenStateChange:{action:"openStateChange"}}},DefaultState={args:{text:"Toggle text with a lot of definition",isOpen:!1,isFixed:!1,withArrow:!1,disabled:!1}},FixedPositionState={args:{text:"Toggle tip text",position:esm.gJ.Left,isFixed:!1,withArrow:!1,disabled:!1}},AllowedPositionsState={args:{text:"Toggle tip text",allowedPositions:[esm.gJ.Top,esm.gJ.Bottom],isFixed:!1,withArrow:!1,disabled:!1}},DisabledToggleTipState={args:{text:"Toggle tip text",position:esm.gJ.Left,isFixed:!1,withArrow:!1,disabled:!0}},WithArrowState={args:{text:"Toggle tip text",position:esm.gJ.Left,isFixed:!1,withArrow:!0,disabled:!1}},WithCustomClass={args:{text:"Toggle tip text",position:esm.gJ.Left,isFixed:!1,withArrow:!0,disabled:!1,customClass:"R2wTwtnMOZ1IoCWiAl4n"}},__namedExportsOrder=["DefaultState","FixedPositionState","AllowedPositionsState","DisabledToggleTipState","WithArrowState","WithCustomClass"];DefaultState.parameters={...DefaultState.parameters,docs:{...DefaultState.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle text with a lot of definition",\n    isOpen: false,\n    isFixed: false,\n    withArrow: false,\n    disabled: false\n  }\n}',...DefaultState.parameters?.docs?.source}}},FixedPositionState.parameters={...FixedPositionState.parameters,docs:{...FixedPositionState.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle tip text",\n    position: ETooltipPosition.Left,\n    isFixed: false,\n    withArrow: false,\n    disabled: false\n  }\n}',...FixedPositionState.parameters?.docs?.source}}},AllowedPositionsState.parameters={...AllowedPositionsState.parameters,docs:{...AllowedPositionsState.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle tip text",\n    allowedPositions: [ETooltipPosition.Top, ETooltipPosition.Bottom],\n    isFixed: false,\n    withArrow: false,\n    disabled: false\n  }\n}',...AllowedPositionsState.parameters?.docs?.source}}},DisabledToggleTipState.parameters={...DisabledToggleTipState.parameters,docs:{...DisabledToggleTipState.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle tip text",\n    position: ETooltipPosition.Left,\n    isFixed: false,\n    withArrow: false,\n    disabled: true\n  }\n}',...DisabledToggleTipState.parameters?.docs?.source}}},WithArrowState.parameters={...WithArrowState.parameters,docs:{...WithArrowState.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle tip text",\n    position: ETooltipPosition.Left,\n    isFixed: false,\n    withArrow: true,\n    disabled: false\n  }\n}',...WithArrowState.parameters?.docs?.source}}},WithCustomClass.parameters={...WithCustomClass.parameters,docs:{...WithCustomClass.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Toggle tip text",\n    position: ETooltipPosition.Left,\n    isFixed: false,\n    withArrow: true,\n    disabled: false,\n    customClass: styles.TooltipCustomClass\n  }\n}',...WithCustomClass.parameters?.docs?.source}}}}}]);