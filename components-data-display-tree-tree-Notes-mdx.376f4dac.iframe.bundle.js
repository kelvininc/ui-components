(self.webpackChunk_kelvininc_react_storybook=self.webpackChunk_kelvininc_react_storybook||[]).push([[101,9308],{"../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/data-display/tree/tree/Notes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@18.3.12_react@18.3.1/node_modules/@mdx-js/react/lib/index.js");const readme_namespaceObject='\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### React\n\n```tsx\nimport React from \'react\';\nimport { KvTree } from \'@kelvininc/react-ui-components/client\';\n\nexport const TreeExample: React.FC = () => (\n\t<>\n\t\t{/*-- With required props --*/}\n\t\t<KvTree nodes={myTreeNodes}></KvTree>\n\t\t\n\t\t{/*-- With required props and all tree loading --*/}\n\t\t<KvTree nodes={myTreeNodes} loading></KvTree>\n\t\t\n\t\t{/*-- With required props and selected node --*/}\n\t\t<KvTree nodes={myTreeNodes} selectedNode="node-id"></KvTree>\n\n\t\t{/*-- With required props and hidden nodes dictionary --*/}\n\t\t<KvTree\n\t\t\tnodes={myTreeNodes}\n\t\t\thiddenNodes={myHiddenNodes}>\n\t\t</KvTree>\n\t\t\n\t\t{/*-- With required props and expanded nodes dictionary --*/}\n\t\t<KvTree\n\t\t\tnodes={myTreeNodes}\n\t\t\texpandedNodes={myExpandedNodes}>\n\t\t</KvTree>\n\t\t\n\t\t{/*-- With required props and disabled nodes dictionary --*/}\n\t\t<KvTree\n\t\t\tnodes={myTreeNodes}\n\t\t\tdisabledNodes={myDisabledNodes}>\n\t\t</KvTree>\n\t\t\n\t\t{/*-- With required props and highlighted nodes dictionary --*/}\n\t\t<KvTree\n\t\t\tnodes={myTreeNodes}\n\t\t\thighlightedNodes={myHighlightedNodes}>\n\t\t</KvTree>\n\t\t\n\t\t{/*-- With required props and loading nodes dictionary --*/}\n\t\t<KvTree\n\t\t\tnodes={myTreeNodes}\n\t\t\tloadingNodes={myLoadingNodes}>\n\t\t</KvTree>\n\t</>\n);\n```\n\n\n\n## Properties\n\n| Property             | Attribute           | Description                                                                                                                              | Type                                                     | Default     |\n| -------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------- | ----------- |\n| `disabledNodes`      | `disabled-nodes`    | (optional) Dictionary that defines whether the tree node is disabled.                                                                    | `{ [key: string]: boolean; }`                            | `undefined` |\n| `expandIcon`         | `expand-icon`       | (optional) Defines if icon to use for expanding, should be and arrow like icon pointing up.                                              | `EIconName`                                              | `undefined` |\n| `expandedNodes`      | `expanded-nodes`    | (optional) Dictionary that defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.  | `{ [key: string]: boolean; }`                            | `undefined` |\n| `hiddenNodes`        | `hidden-nodes`      | (optional) Dictionary that defines whether the tree node is hidden.                                                                      | `{ [key: string]: boolean; }`                            | `undefined` |\n| `highlightedNodes`   | `highlighted-nodes` | (optional) Dictionary that defines whether the tree node is highlighted.                                                                 | `{ [key: string]: boolean; }`                            | `undefined` |\n| `labelsSize`         | `labels-size`       | (optional) Defines the font size of title and subtitle labels.                                                                           | `ETreeItemLabelSize.Regular \\| ETreeItemLabelSize.Small` | `undefined` |\n| `loading`            | `loading`           | (optional) Defines whether the all tree nodes is loading.                                                                                | `boolean`                                                | `false`     |\n| `loadingNodes`       | `loading-nodes`     | (optional) Dictionary that defines whether the tree node is loading.                                                                     | `{ [key: string]: boolean; }`                            | `undefined` |\n| `nodes` _(required)_ | `nodes`             | (required) The tree hierarchy items to render in this component                                                                          | `ITreeNodeItem[]`                                        | `undefined` |\n| `selectedNode`       | `selected-node`     | (optional) The currently selected node id                                                                                                | `string`                                                 | `undefined` |\n| `showTooltip`        | `show-tooltip`      | (optional) Defines whether the label should be displayed as tooltip.                                                                     | `boolean`                                                | `undefined` |\n| `spotlightedNodes`   | `spotlighted-nodes` | (optional) Dictionary that defines whether the tree node is spotlight. Only has visual effect for tree nodes with children and expanded. | `{ [key: string]: boolean; }`                            | `undefined` |\n| `tooltipDelay`       | `tooltip-delay`     | (optional) Delay to show tooltip in milliseconds.                                                                                        | `number`                                                 | `undefined` |\n\n\n## Events\n\n| Event              | Description                                    | Type                         |\n| ------------------ | ---------------------------------------------- | ---------------------------- |\n| `nodeClick`        | Emitted when the tree node item is clicked     | `CustomEvent<ITreeNodeItem>` |\n| `nodeToggleExpand` | Emitted when the node expand toggle is clicked | `CustomEvent<ITreeNodeItem>` |\n\n\n## Shadow Parts\n\n| Part          | Description              |\n| ------------- | ------------------------ |\n| `"tree"`      | The tree container.      |\n| `"tree-item"` | The tree item container. |\n\n\n## CSS Custom Properties\n\n| Name                           | Description                             |\n| ------------------------------ | --------------------------------------- |\n| `--tree-children-offset`       | Offset of the child nodes in px.        |\n| `--tree-children-offset`       | Offset of the child nodes in px.        |\n| `--tree-children-padding-left` | Left padding for the child nodes in px. |\n| `--tree-children-padding-left` | Left padding for the child nodes in px. |\n| `--tree-node-gap`              | Gap between child nodes in px.          |\n| `--tree-node-gap`              | Gap between child nodes in px.          |\n| `--tree-node-height`           | Tree Node height.                       |\n| `--tree-node-height`           | Tree Node height.                       |\n| `--tree-node-width`            | Tree Node height.                       |\n| `--tree-node-width`            | Tree Node height.                       |\n\n\n## Dependencies\n\n### Used by\n\n - [kv-tree-dropdown](../tree-dropdown)\n\n### Depends on\n\n- [kv-tree-item](../tree-item)\n\n### Graph\n```mermaid\ngraph TD;\n  kv-tree --\x3e kv-tree-item\n  kv-tree-item --\x3e kv-icon\n  kv-tree-item --\x3e kv-tooltip\n  kv-tree-item --\x3e kv-badge\n  kv-tooltip --\x3e kv-portal\n  kv-tooltip --\x3e kv-tooltip-text\n  kv-tree-dropdown --\x3e kv-tree\n  style kv-tree fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist/index.mjs"),Tree_stories=__webpack_require__("./src/components/data-display/tree/tree/Tree.stories.tsx");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Tree_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+blocks@8.6.12_react-dom@18.3.1_react@18.3.1_storybook@8.6.12/node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/.pnpm/@storybook+core@8.6.12_storybook@8.6.12/node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./src/components/data-display/tree/tree/Tree.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/react-ui-components/dist/client.esm.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_mocks_tree_mock__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/mocks/tree.mock.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Tree/Tree",component:_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.En9,argTypes:{}},Default={render:args=>{const[selectedNode,setNode]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.selectedNode),[expandedNodes,setExpandedNodes]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.expandedNodes||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kelvininc_react_ui_components_client__WEBPACK_IMPORTED_MODULE_3__.En9,{selectedNode,expandedNodes,onNodeClick:event=>{setNode(event.detail.id)},onNodeToggleExpand:event=>{setExpandedNodes({...expandedNodes,[event.detail.id]:!expandedNodes[event.detail.id]})},...args})},args:{nodes:_mocks_tree_mock__WEBPACK_IMPORTED_MODULE_2__.G9,disabledNodes:{1.2:!0},highlightedNodes:{1.4:!0},loadingNodes:{"1.5.2":!0},hiddenNodes:{}}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: TreeTemplate,\n  args: {\n    nodes: TREE_NODES_MOCK,\n    disabledNodes: {\n      "1.2": true\n    },\n    highlightedNodes: {\n      "1.4": true\n    },\n    loadingNodes: {\n      "1.5.2": true\n    },\n    hiddenNodes: {}\n  }\n}',...Default.parameters?.docs?.source}}}},"./src/mocks/tree.mock.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Cv:()=>TREE_ENTITIES_NODES_MOCK,G9:()=>TREE_NODES_MOCK,iP:()=>TREE_ENTITIES_NESTED_NODES_MOCK});var _kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../packages/ui-components/dist/esm/index.js");const TREE_NODES_MOCK=[{id:"1",label:"Node 1",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetA,children:[{id:"1.2",label:"Node 1.2 (Disabled)",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetC},{id:"1.3",label:"Node 1.3",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetP},{id:"1.4",label:"Node 1.4 (Highlighted)",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetP},{id:"1.5",label:"Node 1.5",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetC,children:[{id:"1.5.1",label:"Node 1.5.1",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetS},{id:"1.5.2",label:"Node 1.5.2",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetS}]}]},{id:"2",label:"Node 2",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetSStatus,iconState:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.cX.Error,counter:32,counterState:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.KW.Error},{id:"3",label:"Node 3 is a node with a really long name that does not fit inside the box",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.AssetS},{id:"4",label:"Node 3"}],TREE_ENTITIES_NODES_MOCK=[{id:"1",label:"Business Units A",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset,children:[{id:"1-houston",label:"Houston - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"1-denver",label:"Denver - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"1-lisbon",label:"Lisbon - Portugal",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"1-melbourne",label:"Melbourne - Australia",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet}]},{id:"2",label:"Business Units B",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset,children:[{id:"2-houston",label:"Houston - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"2-denver",label:"Denver - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet}]},{id:"3",label:"Site D",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset},{id:"4",label:"Process Map ABC",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset},{id:"5",label:"Enterprise Process Map 01 (Production)",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset}],TREE_ENTITIES_NESTED_NODES_MOCK=[{id:"1",label:"Business Units A",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset,children:[{id:"1-houston",label:"Houston - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet,children:[{id:"1-houston-1",label:"Process Map ABC",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset},{id:"1-houston-2",label:"Production Line K",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset}]},{id:"1-denver",label:"Denver - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"1-lisbon",label:"Lisbon - Portugal",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"1-melbourne",label:"Melbourne - Australia",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet}]},{id:"2",label:"Business Units B",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset,children:[{id:"2-houston",label:"Houston - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet},{id:"2-denver",label:"Denver - US",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Bullet}]},{id:"3",label:"Site D",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset},{id:"4",label:"Process Map ABC",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset},{id:"5",label:"Enterprise Process Map 01 (Production)",icon:_kelvininc_react_ui_components__WEBPACK_IMPORTED_MODULE_0__.ib.Asset}]}}]);